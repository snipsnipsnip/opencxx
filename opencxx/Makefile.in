# Makefile.in generated by automake 1.7.5 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@

srcdir = @srcdir@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASH_SH = @BASH_SH@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONVENIENCE_LTDL_FALSE = @CONVENIENCE_LTDL_FALSE@
CONVENIENCE_LTDL_TRUE = @CONVENIENCE_LTDL_TRUE@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
INCLTDL = @INCLTDL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_LTDL_FALSE = @INSTALL_LTDL_FALSE@
INSTALL_LTDL_TRUE = @INSTALL_LTDL_TRUE@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBADD_DL = @LIBADD_DL@
LIBLTDL = @LIBLTDL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@

abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_configure_args = @ac_configure_args@
ac_ct_AR = @ac_ct_AR@
ac_ct_AS = @ac_ct_AS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DLLTOOL = @ac_ct_DLLTOOL@
ac_ct_F77 = @ac_ct_F77@
ac_ct_OBJDUMP = @ac_ct_OBJDUMP@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
diff = @diff@
enable_gc = @enable_gc@
exec_prefix = @exec_prefix@
export_dynamic = @export_dynamic@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
libgc = @libgc@
localstatedir = @localstatedir@
mandir = @mandir@
occ_includes = @occ_includes@
occ_libraries = @occ_libraries@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@

#-------------------------------------------------------------------------
# Permission to use, copy, distribute and modify this software and its
# documentation for any purpose is hereby granted without fee, provided that
# the above copyright notice appear in all copies and that both that copyright
# notice and this permission notice appear in supporting documentation.
#
# Other Contributors make no representations about the suitability of this
# software for any purpose. It is provided "as is" without express or implied
# warranty.
#
# 2001-2003 (C) Copyright by Other Contributors.
#-------------------------------------------------------------------------
AUTOMAKE_OPTIONS = subdir-objects
abs_builddir = @abs_builddir@

BUILT_SOURCES = parser/ptree-generated.h parser/ptree-generated.cc

nobase_pkginclude_HEADERS = \
	parser/AbstractTranslatingWalker.h \
	parser/AbstractTypingWalker.h \
	parser/auxil.h \
	parser/BigHashTable.h \
	parser/CerrErrorLog.h \
	parser/deprecated.h \
	parser/DupLeaf.h \
	parser/Encoding.h \
	parser/ErrorLog.h \
	parser/GC-disabled.h \
	parser/GC-enabled.h \
	parser/GC.h \
	parser/HashTable.h \
	parser/Leaf.h \
	parser/LeafName.h \
	parser/LeafReserved.h \
	parser/LeafThis.h \
	parser/Lex.h \
	parser/MetaclassLoader.h \
	parser/MopMsg.h \
	parser/Msg.h \
	parser/NonLeaf.h \
	parser/NullMetaclassLoader.h \
	parser/ParseErrorMsg.h \
	parser/Parser.h \
	parser/Program.h \
	parser/ProgramFile.h \
	parser/ProgramFromStdin.h \
	parser/ProgramString.h \
	parser/PtreeAccessDecl.h \
	parser/PtreeAccessSpec.h \
	parser/PtreeAndEncodingPrinter.h \
	parser/PtreeArray.h \
	parser/PtreeBlock.h \
	parser/PtreeBrace.h \
	parser/PtreeClassBody.h \
	parser/PtreeClassSpec.h \
	parser/PtreeConstants.h	\
	parser/PtreeDeclaration.h \
	parser/PtreeDeclarator.h \
	parser/PtreeEnumSpec.h \
	parser/PtreeExprStatement.h \
	parser/PtreeExternTemplate.h \
	parser/PtreeFstyleCastExpr.h \
	parser/ptree-generated.h \
	parser/ptreeAll.h \
	parser/Ptree.h \
	parser/PtreeLinkageSpec.h \
	parser/PtreeMetaclassDecl.h \
	parser/PtreeName.h \
	parser/PtreeNamespaceAlias.h \
	parser/PtreeNamespaceSpec.h \
	parser/PtreeTemplateDecl.h \
	parser/PtreeTemplateInstantiation.h \
	parser/PtreeTypedef.h \
	parser/PtreeUserAccessSpec.h \
	parser/PtreeUserdefKeyword.h \
	parser/PtreeUsing.h \
	parser/PtreeUtil.h \
	parser/SourceLocation.h \
	parser/TheErrorLog.h \
	parser/Token.h \
	parser/token-names.h \
	Bind.h					\
	BindClassName.h				\
	BindEnumName.h				\
	BindTemplateClass.h			\
	BindTemplateFunction.h			\
	BindTypedefName.h			\
	BindVarName.h				\
	cbodywalk.h				\
	classwalk.h				\
	ChangedMemberList.h			\
	Class.h					\
	ClassArray.h				\
	ClassBodyWalker.h			\
	ClassWalker.h 				\
	CliErrorMsg.h			\
	defs.h					\
	dloading.h			\
	driver.h 				\
	driver2.h			\
	DynamicMopMetaclassLoader.h	\
	EncodingUtil.h			\
	Environment.h				\
	GenericMsg.h				\
	InfoMsg.h			\
	memberAll.h				\
	Member.h				\
	MemberFunction.h			\
	MemberList.h				\
	Metaclass.h 				\
	MetaclassRegistration.h 		\
	MetaclassRegistry.h			\
	MetacompilerConfiguration.h	\
	mop.h					\
	mop2.h					\
	nil.h				\
	OpencxxConfiguration.h		\
	PtreeIter.h				\
	PtreeMaker.h				\
	PtreeTypeUtil.h			\
	QuoteClass.h				\
	TemplateClass.h				\
	TheMetaclassRegistry.h			\
	TypeInfo.h 				\
	UnknownCliOptionException.h	\
	Walker.h


EXTRA_DIST = \
		parser/ptree-gen.in \
		parser/GC.h.in


INCLUDES = -I$(builddir) -I$(top_srcdir) $(INCLTDL) 

noinst_LTLIBRARIES = \
	libocc_mop.la 	\
	libocc_parser.la


libocc_mop_la_LIBADD = libocc_parser.la

libocc_mop_la_SOURCES = \
	Bind.cc					\
	BindClassName.cc			\
	BindEnumName.cc				\
	BindTemplateClass.cc			\
	BindTemplateFunction.cc			\
	BindTypedefName.cc			\
	BindVarName.cc				\
	ChangedMemberList.cc			\
	Class.cc				\
	ClassArray.cc				\
	ClassBodyWalker.cc			\
	ClassWalker.cc 				\
	dloading.cc				\
	driver.cc 				\
	driver2.cc 				\
	EncodingUtil.cc			\
	Environment.cc				\
	main-con.cc			\
	Member.cc				\
	MemberFunction.cc			\
	MemberList.cc				\
	Metaclass.cc 				\
	MetaclassRegistry.cc			\
	OpencxxConfiguration.cc			\
	PtreeIter.cc				\
        PtreeMaker.cc				\
	PtreeTypeUtil.cc			\
	QuoteClass.cc				\
	TemplateClass.cc			\
	TheMetaclassRegistry.cc			\
	TypeInfo.cc 				\
	Walker.cc


libocc_mop_la_DEPENDENCIES = Makefile.am libocc_parser.la

libocc_parser_la_SOURCES = \
	parser/auxil.cc \
	parser/BigHashTable.cc \
	parser/CerrErrorLog.cc \
	parser/deprecated.cc \
	parser/DupLeaf.cc \
	parser/Encoding.cc \
	parser/HashTable.cc \
	parser/Leaf.cc \
	parser/LeafName.cc \
	parser/LeafThis.cc \
	parser/Lex.cc \
	parser/NonLeaf.cc \
	parser/Parser.cc \
	parser/Program.cc \
	parser/ProgramFile.cc \
	parser/ProgramFromStdin.cc \
	parser/ProgramString.cc \
	parser/PtreeAccessDecl.cc \
	parser/PtreeAccessSpec.cc \
	parser/PtreeArray.cc \
	parser/PtreeBlock.cc \
	parser/PtreeBrace.cc \
	parser/Ptree.cc \
	parser/PtreeClassBody.cc \
	parser/PtreeClassSpec.cc \
	parser/PtreeDeclaration.cc \
	parser/PtreeDeclarator.cc \
	parser/PtreeEnumSpec.cc \
	parser/PtreeExprStatement.cc \
	parser/PtreeExternTemplate.cc \
	parser/PtreeFstyleCastExpr.cc \
	parser/PtreeConstants.cc \
	parser/ptree-generated.cc \
	parser/PtreeLinkageSpec.cc \
	parser/PtreeMetaclassDecl.cc \
	parser/PtreeName.cc \
	parser/PtreeNamespaceAlias.cc \
	parser/PtreeNamespaceSpec.cc \
	parser/PtreeTemplateDecl.cc \
	parser/PtreeTemplateInstantiation.cc \
	parser/PtreeTypedef.cc \
	parser/PtreeUserAccessSpec.cc \
	parser/PtreeUserdefKeyword.cc \
	parser/PtreeUsing.cc \
	parser/PtreeUtil.cc \
	parser/TheErrorLog.cc


libocc_parser_la_DEPENDENCIES = Makefile.am
subdir = opencxx
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

libocc_mop_la_LDFLAGS =
am_libocc_mop_la_OBJECTS = Bind.lo BindClassName.lo BindEnumName.lo \
	BindTemplateClass.lo BindTemplateFunction.lo BindTypedefName.lo \
	BindVarName.lo ChangedMemberList.lo Class.lo ClassArray.lo \
	ClassBodyWalker.lo ClassWalker.lo dloading.lo driver.lo \
	driver2.lo EncodingUtil.lo Environment.lo main-con.lo Member.lo \
	MemberFunction.lo MemberList.lo Metaclass.lo \
	MetaclassRegistry.lo OpencxxConfiguration.lo PtreeIter.lo \
	PtreeMaker.lo PtreeTypeUtil.lo QuoteClass.lo TemplateClass.lo \
	TheMetaclassRegistry.lo TypeInfo.lo Walker.lo
libocc_mop_la_OBJECTS = $(am_libocc_mop_la_OBJECTS)
libocc_parser_la_LDFLAGS =
libocc_parser_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libocc_parser_la_OBJECTS = parser/auxil.lo parser/BigHashTable.lo \
	parser/CerrErrorLog.lo parser/deprecated.lo parser/DupLeaf.lo \
	parser/Encoding.lo parser/HashTable.lo parser/Leaf.lo \
	parser/LeafName.lo parser/LeafThis.lo parser/Lex.lo \
	parser/NonLeaf.lo parser/Parser.lo parser/Program.lo \
	parser/ProgramFile.lo parser/ProgramFromStdin.lo \
	parser/ProgramString.lo parser/PtreeAccessDecl.lo \
	parser/PtreeAccessSpec.lo parser/PtreeArray.lo \
	parser/PtreeBlock.lo parser/PtreeBrace.lo parser/Ptree.lo \
	parser/PtreeClassBody.lo parser/PtreeClassSpec.lo \
	parser/PtreeDeclaration.lo parser/PtreeDeclarator.lo \
	parser/PtreeEnumSpec.lo parser/PtreeExprStatement.lo \
	parser/PtreeExternTemplate.lo parser/PtreeFstyleCastExpr.lo \
	parser/PtreeConstants.lo parser/ptree-generated.lo \
	parser/PtreeLinkageSpec.lo parser/PtreeMetaclassDecl.lo \
	parser/PtreeName.lo parser/PtreeNamespaceAlias.lo \
	parser/PtreeNamespaceSpec.lo parser/PtreeTemplateDecl.lo \
	parser/PtreeTemplateInstantiation.lo parser/PtreeTypedef.lo \
	parser/PtreeUserAccessSpec.lo parser/PtreeUserdefKeyword.lo \
	parser/PtreeUsing.lo parser/PtreeUtil.lo parser/TheErrorLog.lo
libocc_parser_la_OBJECTS = $(am_libocc_parser_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/Bind.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/BindClassName.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/BindEnumName.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/BindTemplateClass.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/BindTemplateFunction.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/BindTypedefName.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/BindVarName.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ChangedMemberList.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Class.Plo ./$(DEPDIR)/ClassArray.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ClassBodyWalker.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ClassWalker.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/EncodingUtil.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Environment.Plo ./$(DEPDIR)/Member.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/MemberFunction.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/MemberList.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Metaclass.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/MetaclassRegistry.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/OpencxxConfiguration.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PtreeIter.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PtreeMaker.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PtreeTypeUtil.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/QuoteClass.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/TemplateClass.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/TheMetaclassRegistry.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/TypeInfo.Plo ./$(DEPDIR)/Walker.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/dloading.Plo ./$(DEPDIR)/driver.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/driver2.Plo ./$(DEPDIR)/main-con.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/BigHashTable.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/CerrErrorLog.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/DupLeaf.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/Encoding.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/HashTable.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/Leaf.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/LeafName.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/LeafThis.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/Lex.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/NonLeaf.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/Parser.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/Program.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/ProgramFile.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/ProgramFromStdin.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/ProgramString.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/Ptree.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeAccessDecl.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeAccessSpec.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeArray.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeBlock.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeBrace.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeClassBody.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeClassSpec.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeConstants.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeDeclaration.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeDeclarator.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeEnumSpec.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeExprStatement.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeExternTemplate.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeFstyleCastExpr.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeLinkageSpec.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeMetaclassDecl.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeName.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeNamespaceAlias.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeNamespaceSpec.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeTemplateDecl.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeTemplateInstantiation.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeTypedef.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeUserAccessSpec.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeUserdefKeyword.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeUsing.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/PtreeUtil.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/TheErrorLog.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/auxil.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/deprecated.Plo \
@AMDEP_TRUE@	parser/$(DEPDIR)/ptree-generated.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libocc_mop_la_SOURCES) $(libocc_parser_la_SOURCES)
HEADERS = $(nobase_pkginclude_HEADERS)

DIST_COMMON = $(nobase_pkginclude_HEADERS) Makefile.am Makefile.in
SOURCES = $(libocc_mop_la_SOURCES) $(libocc_parser_la_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  opencxx/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libocc_mop.la: $(libocc_mop_la_OBJECTS) $(libocc_mop_la_DEPENDENCIES) 
	$(CXXLINK)  $(libocc_mop_la_LDFLAGS) $(libocc_mop_la_OBJECTS) $(libocc_mop_la_LIBADD) $(LIBS)
parser/$(am__dirstamp):
	@$(mkinstalldirs) parser
	@: > parser/$(am__dirstamp)
parser/$(DEPDIR)/$(am__dirstamp):
	@$(mkinstalldirs) parser/$(DEPDIR)
	@: > parser/$(DEPDIR)/$(am__dirstamp)
parser/auxil.lo: parser/$(am__dirstamp) parser/$(DEPDIR)/$(am__dirstamp)
parser/BigHashTable.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/CerrErrorLog.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/deprecated.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/DupLeaf.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/Encoding.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/HashTable.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/Leaf.lo: parser/$(am__dirstamp) parser/$(DEPDIR)/$(am__dirstamp)
parser/LeafName.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/LeafThis.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/Lex.lo: parser/$(am__dirstamp) parser/$(DEPDIR)/$(am__dirstamp)
parser/NonLeaf.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/Parser.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/Program.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/ProgramFile.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/ProgramFromStdin.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/ProgramString.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeAccessDecl.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeAccessSpec.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeArray.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeBlock.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeBrace.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/Ptree.lo: parser/$(am__dirstamp) parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeClassBody.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeClassSpec.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeDeclaration.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeDeclarator.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeEnumSpec.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeExprStatement.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeExternTemplate.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeFstyleCastExpr.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeConstants.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/ptree-generated.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeLinkageSpec.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeMetaclassDecl.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeName.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeNamespaceAlias.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeNamespaceSpec.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeTemplateDecl.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeTemplateInstantiation.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeTypedef.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeUserAccessSpec.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeUserdefKeyword.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeUsing.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/PtreeUtil.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
parser/TheErrorLog.lo: parser/$(am__dirstamp) \
	parser/$(DEPDIR)/$(am__dirstamp)
libocc_parser.la: $(libocc_parser_la_OBJECTS) $(libocc_parser_la_DEPENDENCIES) 
	$(CXXLINK)  $(libocc_parser_la_LDFLAGS) $(libocc_parser_la_OBJECTS) $(libocc_parser_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core
	-rm -f parser/BigHashTable.$(OBJEXT)
	-rm -f parser/BigHashTable.lo
	-rm -f parser/CerrErrorLog.$(OBJEXT)
	-rm -f parser/CerrErrorLog.lo
	-rm -f parser/DupLeaf.$(OBJEXT)
	-rm -f parser/DupLeaf.lo
	-rm -f parser/Encoding.$(OBJEXT)
	-rm -f parser/Encoding.lo
	-rm -f parser/HashTable.$(OBJEXT)
	-rm -f parser/HashTable.lo
	-rm -f parser/Leaf.$(OBJEXT)
	-rm -f parser/Leaf.lo
	-rm -f parser/LeafName.$(OBJEXT)
	-rm -f parser/LeafName.lo
	-rm -f parser/LeafThis.$(OBJEXT)
	-rm -f parser/LeafThis.lo
	-rm -f parser/Lex.$(OBJEXT)
	-rm -f parser/Lex.lo
	-rm -f parser/NonLeaf.$(OBJEXT)
	-rm -f parser/NonLeaf.lo
	-rm -f parser/Parser.$(OBJEXT)
	-rm -f parser/Parser.lo
	-rm -f parser/Program.$(OBJEXT)
	-rm -f parser/Program.lo
	-rm -f parser/ProgramFile.$(OBJEXT)
	-rm -f parser/ProgramFile.lo
	-rm -f parser/ProgramFromStdin.$(OBJEXT)
	-rm -f parser/ProgramFromStdin.lo
	-rm -f parser/ProgramString.$(OBJEXT)
	-rm -f parser/ProgramString.lo
	-rm -f parser/Ptree.$(OBJEXT)
	-rm -f parser/Ptree.lo
	-rm -f parser/PtreeAccessDecl.$(OBJEXT)
	-rm -f parser/PtreeAccessDecl.lo
	-rm -f parser/PtreeAccessSpec.$(OBJEXT)
	-rm -f parser/PtreeAccessSpec.lo
	-rm -f parser/PtreeArray.$(OBJEXT)
	-rm -f parser/PtreeArray.lo
	-rm -f parser/PtreeBlock.$(OBJEXT)
	-rm -f parser/PtreeBlock.lo
	-rm -f parser/PtreeBrace.$(OBJEXT)
	-rm -f parser/PtreeBrace.lo
	-rm -f parser/PtreeClassBody.$(OBJEXT)
	-rm -f parser/PtreeClassBody.lo
	-rm -f parser/PtreeClassSpec.$(OBJEXT)
	-rm -f parser/PtreeClassSpec.lo
	-rm -f parser/PtreeConstants.$(OBJEXT)
	-rm -f parser/PtreeConstants.lo
	-rm -f parser/PtreeDeclaration.$(OBJEXT)
	-rm -f parser/PtreeDeclaration.lo
	-rm -f parser/PtreeDeclarator.$(OBJEXT)
	-rm -f parser/PtreeDeclarator.lo
	-rm -f parser/PtreeEnumSpec.$(OBJEXT)
	-rm -f parser/PtreeEnumSpec.lo
	-rm -f parser/PtreeExprStatement.$(OBJEXT)
	-rm -f parser/PtreeExprStatement.lo
	-rm -f parser/PtreeExternTemplate.$(OBJEXT)
	-rm -f parser/PtreeExternTemplate.lo
	-rm -f parser/PtreeFstyleCastExpr.$(OBJEXT)
	-rm -f parser/PtreeFstyleCastExpr.lo
	-rm -f parser/PtreeLinkageSpec.$(OBJEXT)
	-rm -f parser/PtreeLinkageSpec.lo
	-rm -f parser/PtreeMetaclassDecl.$(OBJEXT)
	-rm -f parser/PtreeMetaclassDecl.lo
	-rm -f parser/PtreeName.$(OBJEXT)
	-rm -f parser/PtreeName.lo
	-rm -f parser/PtreeNamespaceAlias.$(OBJEXT)
	-rm -f parser/PtreeNamespaceAlias.lo
	-rm -f parser/PtreeNamespaceSpec.$(OBJEXT)
	-rm -f parser/PtreeNamespaceSpec.lo
	-rm -f parser/PtreeTemplateDecl.$(OBJEXT)
	-rm -f parser/PtreeTemplateDecl.lo
	-rm -f parser/PtreeTemplateInstantiation.$(OBJEXT)
	-rm -f parser/PtreeTemplateInstantiation.lo
	-rm -f parser/PtreeTypedef.$(OBJEXT)
	-rm -f parser/PtreeTypedef.lo
	-rm -f parser/PtreeUserAccessSpec.$(OBJEXT)
	-rm -f parser/PtreeUserAccessSpec.lo
	-rm -f parser/PtreeUserdefKeyword.$(OBJEXT)
	-rm -f parser/PtreeUserdefKeyword.lo
	-rm -f parser/PtreeUsing.$(OBJEXT)
	-rm -f parser/PtreeUsing.lo
	-rm -f parser/PtreeUtil.$(OBJEXT)
	-rm -f parser/PtreeUtil.lo
	-rm -f parser/TheErrorLog.$(OBJEXT)
	-rm -f parser/TheErrorLog.lo
	-rm -f parser/auxil.$(OBJEXT)
	-rm -f parser/auxil.lo
	-rm -f parser/deprecated.$(OBJEXT)
	-rm -f parser/deprecated.lo
	-rm -f parser/ptree-generated.$(OBJEXT)
	-rm -f parser/ptree-generated.lo

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bind.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BindClassName.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BindEnumName.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BindTemplateClass.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BindTemplateFunction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BindTypedefName.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BindVarName.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChangedMemberList.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Class.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClassArray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClassBodyWalker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ClassWalker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EncodingUtil.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Environment.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Member.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MemberFunction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MemberList.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Metaclass.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MetaclassRegistry.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OpencxxConfiguration.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PtreeIter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PtreeMaker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PtreeTypeUtil.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QuoteClass.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TemplateClass.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TheMetaclassRegistry.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TypeInfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Walker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dloading.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/driver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/driver2.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main-con.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/BigHashTable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/CerrErrorLog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/DupLeaf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/Encoding.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/HashTable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/Leaf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/LeafName.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/LeafThis.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/Lex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/NonLeaf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/Parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/Program.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/ProgramFile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/ProgramFromStdin.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/ProgramString.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/Ptree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeAccessDecl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeAccessSpec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeArray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeBlock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeBrace.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeClassBody.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeClassSpec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeConstants.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeDeclaration.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeDeclarator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeEnumSpec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeExprStatement.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeExternTemplate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeFstyleCastExpr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeLinkageSpec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeMetaclassDecl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeName.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeNamespaceAlias.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeNamespaceSpec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeTemplateDecl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeTemplateInstantiation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeTypedef.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeUserAccessSpec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeUserdefKeyword.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeUsing.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/PtreeUtil.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/TheErrorLog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/auxil.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/deprecated.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@parser/$(DEPDIR)/ptree-generated.Plo@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR) parser/$(DEPDIR)

.cc.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cc.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cc.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

parser/auxil.o: parser/auxil.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/auxil.o -MD -MP -MF "parser/$(DEPDIR)/auxil.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/auxil.o `test -f 'parser/auxil.cc' || echo '$(srcdir)/'`parser/auxil.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/auxil.Tpo" "parser/$(DEPDIR)/auxil.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/auxil.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/auxil.cc' object='parser/auxil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/auxil.Po' tmpdepfile='parser/$(DEPDIR)/auxil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/auxil.o `test -f 'parser/auxil.cc' || echo '$(srcdir)/'`parser/auxil.cc

parser/auxil.obj: parser/auxil.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/auxil.obj -MD -MP -MF "parser/$(DEPDIR)/auxil.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/auxil.obj `if test -f 'parser/auxil.cc'; then $(CYGPATH_W) 'parser/auxil.cc'; else $(CYGPATH_W) '$(srcdir)/parser/auxil.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/auxil.Tpo" "parser/$(DEPDIR)/auxil.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/auxil.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/auxil.cc' object='parser/auxil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/auxil.Po' tmpdepfile='parser/$(DEPDIR)/auxil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/auxil.obj `if test -f 'parser/auxil.cc'; then $(CYGPATH_W) 'parser/auxil.cc'; else $(CYGPATH_W) '$(srcdir)/parser/auxil.cc'; fi`

parser/auxil.lo: parser/auxil.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/auxil.lo -MD -MP -MF "parser/$(DEPDIR)/auxil.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/auxil.lo `test -f 'parser/auxil.cc' || echo '$(srcdir)/'`parser/auxil.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/auxil.Tpo" "parser/$(DEPDIR)/auxil.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/auxil.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/auxil.cc' object='parser/auxil.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/auxil.Plo' tmpdepfile='parser/$(DEPDIR)/auxil.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/auxil.lo `test -f 'parser/auxil.cc' || echo '$(srcdir)/'`parser/auxil.cc

parser/BigHashTable.o: parser/BigHashTable.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/BigHashTable.o -MD -MP -MF "parser/$(DEPDIR)/BigHashTable.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/BigHashTable.o `test -f 'parser/BigHashTable.cc' || echo '$(srcdir)/'`parser/BigHashTable.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/BigHashTable.Tpo" "parser/$(DEPDIR)/BigHashTable.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/BigHashTable.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/BigHashTable.cc' object='parser/BigHashTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/BigHashTable.Po' tmpdepfile='parser/$(DEPDIR)/BigHashTable.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/BigHashTable.o `test -f 'parser/BigHashTable.cc' || echo '$(srcdir)/'`parser/BigHashTable.cc

parser/BigHashTable.obj: parser/BigHashTable.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/BigHashTable.obj -MD -MP -MF "parser/$(DEPDIR)/BigHashTable.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/BigHashTable.obj `if test -f 'parser/BigHashTable.cc'; then $(CYGPATH_W) 'parser/BigHashTable.cc'; else $(CYGPATH_W) '$(srcdir)/parser/BigHashTable.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/BigHashTable.Tpo" "parser/$(DEPDIR)/BigHashTable.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/BigHashTable.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/BigHashTable.cc' object='parser/BigHashTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/BigHashTable.Po' tmpdepfile='parser/$(DEPDIR)/BigHashTable.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/BigHashTable.obj `if test -f 'parser/BigHashTable.cc'; then $(CYGPATH_W) 'parser/BigHashTable.cc'; else $(CYGPATH_W) '$(srcdir)/parser/BigHashTable.cc'; fi`

parser/BigHashTable.lo: parser/BigHashTable.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/BigHashTable.lo -MD -MP -MF "parser/$(DEPDIR)/BigHashTable.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/BigHashTable.lo `test -f 'parser/BigHashTable.cc' || echo '$(srcdir)/'`parser/BigHashTable.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/BigHashTable.Tpo" "parser/$(DEPDIR)/BigHashTable.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/BigHashTable.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/BigHashTable.cc' object='parser/BigHashTable.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/BigHashTable.Plo' tmpdepfile='parser/$(DEPDIR)/BigHashTable.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/BigHashTable.lo `test -f 'parser/BigHashTable.cc' || echo '$(srcdir)/'`parser/BigHashTable.cc

parser/CerrErrorLog.o: parser/CerrErrorLog.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/CerrErrorLog.o -MD -MP -MF "parser/$(DEPDIR)/CerrErrorLog.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/CerrErrorLog.o `test -f 'parser/CerrErrorLog.cc' || echo '$(srcdir)/'`parser/CerrErrorLog.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/CerrErrorLog.Tpo" "parser/$(DEPDIR)/CerrErrorLog.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/CerrErrorLog.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/CerrErrorLog.cc' object='parser/CerrErrorLog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/CerrErrorLog.Po' tmpdepfile='parser/$(DEPDIR)/CerrErrorLog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/CerrErrorLog.o `test -f 'parser/CerrErrorLog.cc' || echo '$(srcdir)/'`parser/CerrErrorLog.cc

parser/CerrErrorLog.obj: parser/CerrErrorLog.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/CerrErrorLog.obj -MD -MP -MF "parser/$(DEPDIR)/CerrErrorLog.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/CerrErrorLog.obj `if test -f 'parser/CerrErrorLog.cc'; then $(CYGPATH_W) 'parser/CerrErrorLog.cc'; else $(CYGPATH_W) '$(srcdir)/parser/CerrErrorLog.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/CerrErrorLog.Tpo" "parser/$(DEPDIR)/CerrErrorLog.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/CerrErrorLog.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/CerrErrorLog.cc' object='parser/CerrErrorLog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/CerrErrorLog.Po' tmpdepfile='parser/$(DEPDIR)/CerrErrorLog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/CerrErrorLog.obj `if test -f 'parser/CerrErrorLog.cc'; then $(CYGPATH_W) 'parser/CerrErrorLog.cc'; else $(CYGPATH_W) '$(srcdir)/parser/CerrErrorLog.cc'; fi`

parser/CerrErrorLog.lo: parser/CerrErrorLog.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/CerrErrorLog.lo -MD -MP -MF "parser/$(DEPDIR)/CerrErrorLog.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/CerrErrorLog.lo `test -f 'parser/CerrErrorLog.cc' || echo '$(srcdir)/'`parser/CerrErrorLog.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/CerrErrorLog.Tpo" "parser/$(DEPDIR)/CerrErrorLog.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/CerrErrorLog.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/CerrErrorLog.cc' object='parser/CerrErrorLog.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/CerrErrorLog.Plo' tmpdepfile='parser/$(DEPDIR)/CerrErrorLog.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/CerrErrorLog.lo `test -f 'parser/CerrErrorLog.cc' || echo '$(srcdir)/'`parser/CerrErrorLog.cc

parser/deprecated.o: parser/deprecated.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/deprecated.o -MD -MP -MF "parser/$(DEPDIR)/deprecated.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/deprecated.o `test -f 'parser/deprecated.cc' || echo '$(srcdir)/'`parser/deprecated.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/deprecated.Tpo" "parser/$(DEPDIR)/deprecated.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/deprecated.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/deprecated.cc' object='parser/deprecated.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/deprecated.Po' tmpdepfile='parser/$(DEPDIR)/deprecated.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/deprecated.o `test -f 'parser/deprecated.cc' || echo '$(srcdir)/'`parser/deprecated.cc

parser/deprecated.obj: parser/deprecated.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/deprecated.obj -MD -MP -MF "parser/$(DEPDIR)/deprecated.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/deprecated.obj `if test -f 'parser/deprecated.cc'; then $(CYGPATH_W) 'parser/deprecated.cc'; else $(CYGPATH_W) '$(srcdir)/parser/deprecated.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/deprecated.Tpo" "parser/$(DEPDIR)/deprecated.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/deprecated.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/deprecated.cc' object='parser/deprecated.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/deprecated.Po' tmpdepfile='parser/$(DEPDIR)/deprecated.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/deprecated.obj `if test -f 'parser/deprecated.cc'; then $(CYGPATH_W) 'parser/deprecated.cc'; else $(CYGPATH_W) '$(srcdir)/parser/deprecated.cc'; fi`

parser/deprecated.lo: parser/deprecated.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/deprecated.lo -MD -MP -MF "parser/$(DEPDIR)/deprecated.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/deprecated.lo `test -f 'parser/deprecated.cc' || echo '$(srcdir)/'`parser/deprecated.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/deprecated.Tpo" "parser/$(DEPDIR)/deprecated.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/deprecated.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/deprecated.cc' object='parser/deprecated.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/deprecated.Plo' tmpdepfile='parser/$(DEPDIR)/deprecated.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/deprecated.lo `test -f 'parser/deprecated.cc' || echo '$(srcdir)/'`parser/deprecated.cc

parser/DupLeaf.o: parser/DupLeaf.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/DupLeaf.o -MD -MP -MF "parser/$(DEPDIR)/DupLeaf.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/DupLeaf.o `test -f 'parser/DupLeaf.cc' || echo '$(srcdir)/'`parser/DupLeaf.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/DupLeaf.Tpo" "parser/$(DEPDIR)/DupLeaf.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/DupLeaf.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/DupLeaf.cc' object='parser/DupLeaf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/DupLeaf.Po' tmpdepfile='parser/$(DEPDIR)/DupLeaf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/DupLeaf.o `test -f 'parser/DupLeaf.cc' || echo '$(srcdir)/'`parser/DupLeaf.cc

parser/DupLeaf.obj: parser/DupLeaf.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/DupLeaf.obj -MD -MP -MF "parser/$(DEPDIR)/DupLeaf.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/DupLeaf.obj `if test -f 'parser/DupLeaf.cc'; then $(CYGPATH_W) 'parser/DupLeaf.cc'; else $(CYGPATH_W) '$(srcdir)/parser/DupLeaf.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/DupLeaf.Tpo" "parser/$(DEPDIR)/DupLeaf.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/DupLeaf.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/DupLeaf.cc' object='parser/DupLeaf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/DupLeaf.Po' tmpdepfile='parser/$(DEPDIR)/DupLeaf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/DupLeaf.obj `if test -f 'parser/DupLeaf.cc'; then $(CYGPATH_W) 'parser/DupLeaf.cc'; else $(CYGPATH_W) '$(srcdir)/parser/DupLeaf.cc'; fi`

parser/DupLeaf.lo: parser/DupLeaf.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/DupLeaf.lo -MD -MP -MF "parser/$(DEPDIR)/DupLeaf.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/DupLeaf.lo `test -f 'parser/DupLeaf.cc' || echo '$(srcdir)/'`parser/DupLeaf.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/DupLeaf.Tpo" "parser/$(DEPDIR)/DupLeaf.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/DupLeaf.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/DupLeaf.cc' object='parser/DupLeaf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/DupLeaf.Plo' tmpdepfile='parser/$(DEPDIR)/DupLeaf.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/DupLeaf.lo `test -f 'parser/DupLeaf.cc' || echo '$(srcdir)/'`parser/DupLeaf.cc

parser/Encoding.o: parser/Encoding.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Encoding.o -MD -MP -MF "parser/$(DEPDIR)/Encoding.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Encoding.o `test -f 'parser/Encoding.cc' || echo '$(srcdir)/'`parser/Encoding.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Encoding.Tpo" "parser/$(DEPDIR)/Encoding.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Encoding.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Encoding.cc' object='parser/Encoding.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Encoding.Po' tmpdepfile='parser/$(DEPDIR)/Encoding.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Encoding.o `test -f 'parser/Encoding.cc' || echo '$(srcdir)/'`parser/Encoding.cc

parser/Encoding.obj: parser/Encoding.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Encoding.obj -MD -MP -MF "parser/$(DEPDIR)/Encoding.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Encoding.obj `if test -f 'parser/Encoding.cc'; then $(CYGPATH_W) 'parser/Encoding.cc'; else $(CYGPATH_W) '$(srcdir)/parser/Encoding.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Encoding.Tpo" "parser/$(DEPDIR)/Encoding.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Encoding.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Encoding.cc' object='parser/Encoding.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Encoding.Po' tmpdepfile='parser/$(DEPDIR)/Encoding.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Encoding.obj `if test -f 'parser/Encoding.cc'; then $(CYGPATH_W) 'parser/Encoding.cc'; else $(CYGPATH_W) '$(srcdir)/parser/Encoding.cc'; fi`

parser/Encoding.lo: parser/Encoding.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Encoding.lo -MD -MP -MF "parser/$(DEPDIR)/Encoding.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Encoding.lo `test -f 'parser/Encoding.cc' || echo '$(srcdir)/'`parser/Encoding.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Encoding.Tpo" "parser/$(DEPDIR)/Encoding.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Encoding.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Encoding.cc' object='parser/Encoding.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Encoding.Plo' tmpdepfile='parser/$(DEPDIR)/Encoding.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Encoding.lo `test -f 'parser/Encoding.cc' || echo '$(srcdir)/'`parser/Encoding.cc

parser/HashTable.o: parser/HashTable.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/HashTable.o -MD -MP -MF "parser/$(DEPDIR)/HashTable.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/HashTable.o `test -f 'parser/HashTable.cc' || echo '$(srcdir)/'`parser/HashTable.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/HashTable.Tpo" "parser/$(DEPDIR)/HashTable.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/HashTable.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/HashTable.cc' object='parser/HashTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/HashTable.Po' tmpdepfile='parser/$(DEPDIR)/HashTable.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/HashTable.o `test -f 'parser/HashTable.cc' || echo '$(srcdir)/'`parser/HashTable.cc

parser/HashTable.obj: parser/HashTable.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/HashTable.obj -MD -MP -MF "parser/$(DEPDIR)/HashTable.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/HashTable.obj `if test -f 'parser/HashTable.cc'; then $(CYGPATH_W) 'parser/HashTable.cc'; else $(CYGPATH_W) '$(srcdir)/parser/HashTable.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/HashTable.Tpo" "parser/$(DEPDIR)/HashTable.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/HashTable.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/HashTable.cc' object='parser/HashTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/HashTable.Po' tmpdepfile='parser/$(DEPDIR)/HashTable.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/HashTable.obj `if test -f 'parser/HashTable.cc'; then $(CYGPATH_W) 'parser/HashTable.cc'; else $(CYGPATH_W) '$(srcdir)/parser/HashTable.cc'; fi`

parser/HashTable.lo: parser/HashTable.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/HashTable.lo -MD -MP -MF "parser/$(DEPDIR)/HashTable.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/HashTable.lo `test -f 'parser/HashTable.cc' || echo '$(srcdir)/'`parser/HashTable.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/HashTable.Tpo" "parser/$(DEPDIR)/HashTable.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/HashTable.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/HashTable.cc' object='parser/HashTable.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/HashTable.Plo' tmpdepfile='parser/$(DEPDIR)/HashTable.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/HashTable.lo `test -f 'parser/HashTable.cc' || echo '$(srcdir)/'`parser/HashTable.cc

parser/Leaf.o: parser/Leaf.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Leaf.o -MD -MP -MF "parser/$(DEPDIR)/Leaf.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Leaf.o `test -f 'parser/Leaf.cc' || echo '$(srcdir)/'`parser/Leaf.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Leaf.Tpo" "parser/$(DEPDIR)/Leaf.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Leaf.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Leaf.cc' object='parser/Leaf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Leaf.Po' tmpdepfile='parser/$(DEPDIR)/Leaf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Leaf.o `test -f 'parser/Leaf.cc' || echo '$(srcdir)/'`parser/Leaf.cc

parser/Leaf.obj: parser/Leaf.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Leaf.obj -MD -MP -MF "parser/$(DEPDIR)/Leaf.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Leaf.obj `if test -f 'parser/Leaf.cc'; then $(CYGPATH_W) 'parser/Leaf.cc'; else $(CYGPATH_W) '$(srcdir)/parser/Leaf.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Leaf.Tpo" "parser/$(DEPDIR)/Leaf.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Leaf.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Leaf.cc' object='parser/Leaf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Leaf.Po' tmpdepfile='parser/$(DEPDIR)/Leaf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Leaf.obj `if test -f 'parser/Leaf.cc'; then $(CYGPATH_W) 'parser/Leaf.cc'; else $(CYGPATH_W) '$(srcdir)/parser/Leaf.cc'; fi`

parser/Leaf.lo: parser/Leaf.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Leaf.lo -MD -MP -MF "parser/$(DEPDIR)/Leaf.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Leaf.lo `test -f 'parser/Leaf.cc' || echo '$(srcdir)/'`parser/Leaf.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Leaf.Tpo" "parser/$(DEPDIR)/Leaf.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Leaf.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Leaf.cc' object='parser/Leaf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Leaf.Plo' tmpdepfile='parser/$(DEPDIR)/Leaf.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Leaf.lo `test -f 'parser/Leaf.cc' || echo '$(srcdir)/'`parser/Leaf.cc

parser/LeafName.o: parser/LeafName.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/LeafName.o -MD -MP -MF "parser/$(DEPDIR)/LeafName.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/LeafName.o `test -f 'parser/LeafName.cc' || echo '$(srcdir)/'`parser/LeafName.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/LeafName.Tpo" "parser/$(DEPDIR)/LeafName.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/LeafName.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/LeafName.cc' object='parser/LeafName.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/LeafName.Po' tmpdepfile='parser/$(DEPDIR)/LeafName.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/LeafName.o `test -f 'parser/LeafName.cc' || echo '$(srcdir)/'`parser/LeafName.cc

parser/LeafName.obj: parser/LeafName.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/LeafName.obj -MD -MP -MF "parser/$(DEPDIR)/LeafName.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/LeafName.obj `if test -f 'parser/LeafName.cc'; then $(CYGPATH_W) 'parser/LeafName.cc'; else $(CYGPATH_W) '$(srcdir)/parser/LeafName.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/LeafName.Tpo" "parser/$(DEPDIR)/LeafName.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/LeafName.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/LeafName.cc' object='parser/LeafName.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/LeafName.Po' tmpdepfile='parser/$(DEPDIR)/LeafName.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/LeafName.obj `if test -f 'parser/LeafName.cc'; then $(CYGPATH_W) 'parser/LeafName.cc'; else $(CYGPATH_W) '$(srcdir)/parser/LeafName.cc'; fi`

parser/LeafName.lo: parser/LeafName.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/LeafName.lo -MD -MP -MF "parser/$(DEPDIR)/LeafName.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/LeafName.lo `test -f 'parser/LeafName.cc' || echo '$(srcdir)/'`parser/LeafName.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/LeafName.Tpo" "parser/$(DEPDIR)/LeafName.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/LeafName.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/LeafName.cc' object='parser/LeafName.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/LeafName.Plo' tmpdepfile='parser/$(DEPDIR)/LeafName.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/LeafName.lo `test -f 'parser/LeafName.cc' || echo '$(srcdir)/'`parser/LeafName.cc

parser/LeafThis.o: parser/LeafThis.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/LeafThis.o -MD -MP -MF "parser/$(DEPDIR)/LeafThis.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/LeafThis.o `test -f 'parser/LeafThis.cc' || echo '$(srcdir)/'`parser/LeafThis.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/LeafThis.Tpo" "parser/$(DEPDIR)/LeafThis.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/LeafThis.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/LeafThis.cc' object='parser/LeafThis.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/LeafThis.Po' tmpdepfile='parser/$(DEPDIR)/LeafThis.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/LeafThis.o `test -f 'parser/LeafThis.cc' || echo '$(srcdir)/'`parser/LeafThis.cc

parser/LeafThis.obj: parser/LeafThis.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/LeafThis.obj -MD -MP -MF "parser/$(DEPDIR)/LeafThis.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/LeafThis.obj `if test -f 'parser/LeafThis.cc'; then $(CYGPATH_W) 'parser/LeafThis.cc'; else $(CYGPATH_W) '$(srcdir)/parser/LeafThis.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/LeafThis.Tpo" "parser/$(DEPDIR)/LeafThis.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/LeafThis.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/LeafThis.cc' object='parser/LeafThis.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/LeafThis.Po' tmpdepfile='parser/$(DEPDIR)/LeafThis.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/LeafThis.obj `if test -f 'parser/LeafThis.cc'; then $(CYGPATH_W) 'parser/LeafThis.cc'; else $(CYGPATH_W) '$(srcdir)/parser/LeafThis.cc'; fi`

parser/LeafThis.lo: parser/LeafThis.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/LeafThis.lo -MD -MP -MF "parser/$(DEPDIR)/LeafThis.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/LeafThis.lo `test -f 'parser/LeafThis.cc' || echo '$(srcdir)/'`parser/LeafThis.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/LeafThis.Tpo" "parser/$(DEPDIR)/LeafThis.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/LeafThis.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/LeafThis.cc' object='parser/LeafThis.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/LeafThis.Plo' tmpdepfile='parser/$(DEPDIR)/LeafThis.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/LeafThis.lo `test -f 'parser/LeafThis.cc' || echo '$(srcdir)/'`parser/LeafThis.cc

parser/Lex.o: parser/Lex.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Lex.o -MD -MP -MF "parser/$(DEPDIR)/Lex.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Lex.o `test -f 'parser/Lex.cc' || echo '$(srcdir)/'`parser/Lex.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Lex.Tpo" "parser/$(DEPDIR)/Lex.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Lex.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Lex.cc' object='parser/Lex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Lex.Po' tmpdepfile='parser/$(DEPDIR)/Lex.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Lex.o `test -f 'parser/Lex.cc' || echo '$(srcdir)/'`parser/Lex.cc

parser/Lex.obj: parser/Lex.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Lex.obj -MD -MP -MF "parser/$(DEPDIR)/Lex.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Lex.obj `if test -f 'parser/Lex.cc'; then $(CYGPATH_W) 'parser/Lex.cc'; else $(CYGPATH_W) '$(srcdir)/parser/Lex.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Lex.Tpo" "parser/$(DEPDIR)/Lex.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Lex.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Lex.cc' object='parser/Lex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Lex.Po' tmpdepfile='parser/$(DEPDIR)/Lex.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Lex.obj `if test -f 'parser/Lex.cc'; then $(CYGPATH_W) 'parser/Lex.cc'; else $(CYGPATH_W) '$(srcdir)/parser/Lex.cc'; fi`

parser/Lex.lo: parser/Lex.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Lex.lo -MD -MP -MF "parser/$(DEPDIR)/Lex.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Lex.lo `test -f 'parser/Lex.cc' || echo '$(srcdir)/'`parser/Lex.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Lex.Tpo" "parser/$(DEPDIR)/Lex.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Lex.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Lex.cc' object='parser/Lex.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Lex.Plo' tmpdepfile='parser/$(DEPDIR)/Lex.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Lex.lo `test -f 'parser/Lex.cc' || echo '$(srcdir)/'`parser/Lex.cc

parser/NonLeaf.o: parser/NonLeaf.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/NonLeaf.o -MD -MP -MF "parser/$(DEPDIR)/NonLeaf.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/NonLeaf.o `test -f 'parser/NonLeaf.cc' || echo '$(srcdir)/'`parser/NonLeaf.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/NonLeaf.Tpo" "parser/$(DEPDIR)/NonLeaf.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/NonLeaf.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/NonLeaf.cc' object='parser/NonLeaf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/NonLeaf.Po' tmpdepfile='parser/$(DEPDIR)/NonLeaf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/NonLeaf.o `test -f 'parser/NonLeaf.cc' || echo '$(srcdir)/'`parser/NonLeaf.cc

parser/NonLeaf.obj: parser/NonLeaf.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/NonLeaf.obj -MD -MP -MF "parser/$(DEPDIR)/NonLeaf.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/NonLeaf.obj `if test -f 'parser/NonLeaf.cc'; then $(CYGPATH_W) 'parser/NonLeaf.cc'; else $(CYGPATH_W) '$(srcdir)/parser/NonLeaf.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/NonLeaf.Tpo" "parser/$(DEPDIR)/NonLeaf.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/NonLeaf.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/NonLeaf.cc' object='parser/NonLeaf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/NonLeaf.Po' tmpdepfile='parser/$(DEPDIR)/NonLeaf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/NonLeaf.obj `if test -f 'parser/NonLeaf.cc'; then $(CYGPATH_W) 'parser/NonLeaf.cc'; else $(CYGPATH_W) '$(srcdir)/parser/NonLeaf.cc'; fi`

parser/NonLeaf.lo: parser/NonLeaf.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/NonLeaf.lo -MD -MP -MF "parser/$(DEPDIR)/NonLeaf.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/NonLeaf.lo `test -f 'parser/NonLeaf.cc' || echo '$(srcdir)/'`parser/NonLeaf.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/NonLeaf.Tpo" "parser/$(DEPDIR)/NonLeaf.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/NonLeaf.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/NonLeaf.cc' object='parser/NonLeaf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/NonLeaf.Plo' tmpdepfile='parser/$(DEPDIR)/NonLeaf.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/NonLeaf.lo `test -f 'parser/NonLeaf.cc' || echo '$(srcdir)/'`parser/NonLeaf.cc

parser/Parser.o: parser/Parser.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Parser.o -MD -MP -MF "parser/$(DEPDIR)/Parser.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Parser.o `test -f 'parser/Parser.cc' || echo '$(srcdir)/'`parser/Parser.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Parser.Tpo" "parser/$(DEPDIR)/Parser.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Parser.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Parser.cc' object='parser/Parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Parser.Po' tmpdepfile='parser/$(DEPDIR)/Parser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Parser.o `test -f 'parser/Parser.cc' || echo '$(srcdir)/'`parser/Parser.cc

parser/Parser.obj: parser/Parser.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Parser.obj -MD -MP -MF "parser/$(DEPDIR)/Parser.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Parser.obj `if test -f 'parser/Parser.cc'; then $(CYGPATH_W) 'parser/Parser.cc'; else $(CYGPATH_W) '$(srcdir)/parser/Parser.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Parser.Tpo" "parser/$(DEPDIR)/Parser.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Parser.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Parser.cc' object='parser/Parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Parser.Po' tmpdepfile='parser/$(DEPDIR)/Parser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Parser.obj `if test -f 'parser/Parser.cc'; then $(CYGPATH_W) 'parser/Parser.cc'; else $(CYGPATH_W) '$(srcdir)/parser/Parser.cc'; fi`

parser/Parser.lo: parser/Parser.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Parser.lo -MD -MP -MF "parser/$(DEPDIR)/Parser.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Parser.lo `test -f 'parser/Parser.cc' || echo '$(srcdir)/'`parser/Parser.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Parser.Tpo" "parser/$(DEPDIR)/Parser.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Parser.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Parser.cc' object='parser/Parser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Parser.Plo' tmpdepfile='parser/$(DEPDIR)/Parser.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Parser.lo `test -f 'parser/Parser.cc' || echo '$(srcdir)/'`parser/Parser.cc

parser/Program.o: parser/Program.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Program.o -MD -MP -MF "parser/$(DEPDIR)/Program.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Program.o `test -f 'parser/Program.cc' || echo '$(srcdir)/'`parser/Program.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Program.Tpo" "parser/$(DEPDIR)/Program.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Program.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Program.cc' object='parser/Program.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Program.Po' tmpdepfile='parser/$(DEPDIR)/Program.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Program.o `test -f 'parser/Program.cc' || echo '$(srcdir)/'`parser/Program.cc

parser/Program.obj: parser/Program.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Program.obj -MD -MP -MF "parser/$(DEPDIR)/Program.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Program.obj `if test -f 'parser/Program.cc'; then $(CYGPATH_W) 'parser/Program.cc'; else $(CYGPATH_W) '$(srcdir)/parser/Program.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Program.Tpo" "parser/$(DEPDIR)/Program.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Program.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Program.cc' object='parser/Program.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Program.Po' tmpdepfile='parser/$(DEPDIR)/Program.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Program.obj `if test -f 'parser/Program.cc'; then $(CYGPATH_W) 'parser/Program.cc'; else $(CYGPATH_W) '$(srcdir)/parser/Program.cc'; fi`

parser/Program.lo: parser/Program.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Program.lo -MD -MP -MF "parser/$(DEPDIR)/Program.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Program.lo `test -f 'parser/Program.cc' || echo '$(srcdir)/'`parser/Program.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Program.Tpo" "parser/$(DEPDIR)/Program.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Program.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Program.cc' object='parser/Program.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Program.Plo' tmpdepfile='parser/$(DEPDIR)/Program.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Program.lo `test -f 'parser/Program.cc' || echo '$(srcdir)/'`parser/Program.cc

parser/ProgramFile.o: parser/ProgramFile.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/ProgramFile.o -MD -MP -MF "parser/$(DEPDIR)/ProgramFile.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/ProgramFile.o `test -f 'parser/ProgramFile.cc' || echo '$(srcdir)/'`parser/ProgramFile.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/ProgramFile.Tpo" "parser/$(DEPDIR)/ProgramFile.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/ProgramFile.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/ProgramFile.cc' object='parser/ProgramFile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/ProgramFile.Po' tmpdepfile='parser/$(DEPDIR)/ProgramFile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/ProgramFile.o `test -f 'parser/ProgramFile.cc' || echo '$(srcdir)/'`parser/ProgramFile.cc

parser/ProgramFile.obj: parser/ProgramFile.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/ProgramFile.obj -MD -MP -MF "parser/$(DEPDIR)/ProgramFile.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/ProgramFile.obj `if test -f 'parser/ProgramFile.cc'; then $(CYGPATH_W) 'parser/ProgramFile.cc'; else $(CYGPATH_W) '$(srcdir)/parser/ProgramFile.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/ProgramFile.Tpo" "parser/$(DEPDIR)/ProgramFile.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/ProgramFile.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/ProgramFile.cc' object='parser/ProgramFile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/ProgramFile.Po' tmpdepfile='parser/$(DEPDIR)/ProgramFile.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/ProgramFile.obj `if test -f 'parser/ProgramFile.cc'; then $(CYGPATH_W) 'parser/ProgramFile.cc'; else $(CYGPATH_W) '$(srcdir)/parser/ProgramFile.cc'; fi`

parser/ProgramFile.lo: parser/ProgramFile.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/ProgramFile.lo -MD -MP -MF "parser/$(DEPDIR)/ProgramFile.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/ProgramFile.lo `test -f 'parser/ProgramFile.cc' || echo '$(srcdir)/'`parser/ProgramFile.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/ProgramFile.Tpo" "parser/$(DEPDIR)/ProgramFile.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/ProgramFile.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/ProgramFile.cc' object='parser/ProgramFile.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/ProgramFile.Plo' tmpdepfile='parser/$(DEPDIR)/ProgramFile.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/ProgramFile.lo `test -f 'parser/ProgramFile.cc' || echo '$(srcdir)/'`parser/ProgramFile.cc

parser/ProgramFromStdin.o: parser/ProgramFromStdin.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/ProgramFromStdin.o -MD -MP -MF "parser/$(DEPDIR)/ProgramFromStdin.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/ProgramFromStdin.o `test -f 'parser/ProgramFromStdin.cc' || echo '$(srcdir)/'`parser/ProgramFromStdin.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/ProgramFromStdin.Tpo" "parser/$(DEPDIR)/ProgramFromStdin.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/ProgramFromStdin.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/ProgramFromStdin.cc' object='parser/ProgramFromStdin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/ProgramFromStdin.Po' tmpdepfile='parser/$(DEPDIR)/ProgramFromStdin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/ProgramFromStdin.o `test -f 'parser/ProgramFromStdin.cc' || echo '$(srcdir)/'`parser/ProgramFromStdin.cc

parser/ProgramFromStdin.obj: parser/ProgramFromStdin.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/ProgramFromStdin.obj -MD -MP -MF "parser/$(DEPDIR)/ProgramFromStdin.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/ProgramFromStdin.obj `if test -f 'parser/ProgramFromStdin.cc'; then $(CYGPATH_W) 'parser/ProgramFromStdin.cc'; else $(CYGPATH_W) '$(srcdir)/parser/ProgramFromStdin.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/ProgramFromStdin.Tpo" "parser/$(DEPDIR)/ProgramFromStdin.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/ProgramFromStdin.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/ProgramFromStdin.cc' object='parser/ProgramFromStdin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/ProgramFromStdin.Po' tmpdepfile='parser/$(DEPDIR)/ProgramFromStdin.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/ProgramFromStdin.obj `if test -f 'parser/ProgramFromStdin.cc'; then $(CYGPATH_W) 'parser/ProgramFromStdin.cc'; else $(CYGPATH_W) '$(srcdir)/parser/ProgramFromStdin.cc'; fi`

parser/ProgramFromStdin.lo: parser/ProgramFromStdin.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/ProgramFromStdin.lo -MD -MP -MF "parser/$(DEPDIR)/ProgramFromStdin.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/ProgramFromStdin.lo `test -f 'parser/ProgramFromStdin.cc' || echo '$(srcdir)/'`parser/ProgramFromStdin.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/ProgramFromStdin.Tpo" "parser/$(DEPDIR)/ProgramFromStdin.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/ProgramFromStdin.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/ProgramFromStdin.cc' object='parser/ProgramFromStdin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/ProgramFromStdin.Plo' tmpdepfile='parser/$(DEPDIR)/ProgramFromStdin.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/ProgramFromStdin.lo `test -f 'parser/ProgramFromStdin.cc' || echo '$(srcdir)/'`parser/ProgramFromStdin.cc

parser/ProgramString.o: parser/ProgramString.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/ProgramString.o -MD -MP -MF "parser/$(DEPDIR)/ProgramString.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/ProgramString.o `test -f 'parser/ProgramString.cc' || echo '$(srcdir)/'`parser/ProgramString.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/ProgramString.Tpo" "parser/$(DEPDIR)/ProgramString.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/ProgramString.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/ProgramString.cc' object='parser/ProgramString.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/ProgramString.Po' tmpdepfile='parser/$(DEPDIR)/ProgramString.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/ProgramString.o `test -f 'parser/ProgramString.cc' || echo '$(srcdir)/'`parser/ProgramString.cc

parser/ProgramString.obj: parser/ProgramString.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/ProgramString.obj -MD -MP -MF "parser/$(DEPDIR)/ProgramString.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/ProgramString.obj `if test -f 'parser/ProgramString.cc'; then $(CYGPATH_W) 'parser/ProgramString.cc'; else $(CYGPATH_W) '$(srcdir)/parser/ProgramString.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/ProgramString.Tpo" "parser/$(DEPDIR)/ProgramString.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/ProgramString.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/ProgramString.cc' object='parser/ProgramString.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/ProgramString.Po' tmpdepfile='parser/$(DEPDIR)/ProgramString.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/ProgramString.obj `if test -f 'parser/ProgramString.cc'; then $(CYGPATH_W) 'parser/ProgramString.cc'; else $(CYGPATH_W) '$(srcdir)/parser/ProgramString.cc'; fi`

parser/ProgramString.lo: parser/ProgramString.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/ProgramString.lo -MD -MP -MF "parser/$(DEPDIR)/ProgramString.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/ProgramString.lo `test -f 'parser/ProgramString.cc' || echo '$(srcdir)/'`parser/ProgramString.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/ProgramString.Tpo" "parser/$(DEPDIR)/ProgramString.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/ProgramString.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/ProgramString.cc' object='parser/ProgramString.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/ProgramString.Plo' tmpdepfile='parser/$(DEPDIR)/ProgramString.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/ProgramString.lo `test -f 'parser/ProgramString.cc' || echo '$(srcdir)/'`parser/ProgramString.cc

parser/PtreeAccessDecl.o: parser/PtreeAccessDecl.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeAccessDecl.o -MD -MP -MF "parser/$(DEPDIR)/PtreeAccessDecl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeAccessDecl.o `test -f 'parser/PtreeAccessDecl.cc' || echo '$(srcdir)/'`parser/PtreeAccessDecl.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeAccessDecl.Tpo" "parser/$(DEPDIR)/PtreeAccessDecl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeAccessDecl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeAccessDecl.cc' object='parser/PtreeAccessDecl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeAccessDecl.Po' tmpdepfile='parser/$(DEPDIR)/PtreeAccessDecl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeAccessDecl.o `test -f 'parser/PtreeAccessDecl.cc' || echo '$(srcdir)/'`parser/PtreeAccessDecl.cc

parser/PtreeAccessDecl.obj: parser/PtreeAccessDecl.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeAccessDecl.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeAccessDecl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeAccessDecl.obj `if test -f 'parser/PtreeAccessDecl.cc'; then $(CYGPATH_W) 'parser/PtreeAccessDecl.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeAccessDecl.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeAccessDecl.Tpo" "parser/$(DEPDIR)/PtreeAccessDecl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeAccessDecl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeAccessDecl.cc' object='parser/PtreeAccessDecl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeAccessDecl.Po' tmpdepfile='parser/$(DEPDIR)/PtreeAccessDecl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeAccessDecl.obj `if test -f 'parser/PtreeAccessDecl.cc'; then $(CYGPATH_W) 'parser/PtreeAccessDecl.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeAccessDecl.cc'; fi`

parser/PtreeAccessDecl.lo: parser/PtreeAccessDecl.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeAccessDecl.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeAccessDecl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeAccessDecl.lo `test -f 'parser/PtreeAccessDecl.cc' || echo '$(srcdir)/'`parser/PtreeAccessDecl.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeAccessDecl.Tpo" "parser/$(DEPDIR)/PtreeAccessDecl.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeAccessDecl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeAccessDecl.cc' object='parser/PtreeAccessDecl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeAccessDecl.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeAccessDecl.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeAccessDecl.lo `test -f 'parser/PtreeAccessDecl.cc' || echo '$(srcdir)/'`parser/PtreeAccessDecl.cc

parser/PtreeAccessSpec.o: parser/PtreeAccessSpec.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeAccessSpec.o -MD -MP -MF "parser/$(DEPDIR)/PtreeAccessSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeAccessSpec.o `test -f 'parser/PtreeAccessSpec.cc' || echo '$(srcdir)/'`parser/PtreeAccessSpec.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeAccessSpec.Tpo" "parser/$(DEPDIR)/PtreeAccessSpec.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeAccessSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeAccessSpec.cc' object='parser/PtreeAccessSpec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeAccessSpec.Po' tmpdepfile='parser/$(DEPDIR)/PtreeAccessSpec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeAccessSpec.o `test -f 'parser/PtreeAccessSpec.cc' || echo '$(srcdir)/'`parser/PtreeAccessSpec.cc

parser/PtreeAccessSpec.obj: parser/PtreeAccessSpec.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeAccessSpec.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeAccessSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeAccessSpec.obj `if test -f 'parser/PtreeAccessSpec.cc'; then $(CYGPATH_W) 'parser/PtreeAccessSpec.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeAccessSpec.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeAccessSpec.Tpo" "parser/$(DEPDIR)/PtreeAccessSpec.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeAccessSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeAccessSpec.cc' object='parser/PtreeAccessSpec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeAccessSpec.Po' tmpdepfile='parser/$(DEPDIR)/PtreeAccessSpec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeAccessSpec.obj `if test -f 'parser/PtreeAccessSpec.cc'; then $(CYGPATH_W) 'parser/PtreeAccessSpec.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeAccessSpec.cc'; fi`

parser/PtreeAccessSpec.lo: parser/PtreeAccessSpec.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeAccessSpec.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeAccessSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeAccessSpec.lo `test -f 'parser/PtreeAccessSpec.cc' || echo '$(srcdir)/'`parser/PtreeAccessSpec.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeAccessSpec.Tpo" "parser/$(DEPDIR)/PtreeAccessSpec.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeAccessSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeAccessSpec.cc' object='parser/PtreeAccessSpec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeAccessSpec.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeAccessSpec.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeAccessSpec.lo `test -f 'parser/PtreeAccessSpec.cc' || echo '$(srcdir)/'`parser/PtreeAccessSpec.cc

parser/PtreeArray.o: parser/PtreeArray.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeArray.o -MD -MP -MF "parser/$(DEPDIR)/PtreeArray.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeArray.o `test -f 'parser/PtreeArray.cc' || echo '$(srcdir)/'`parser/PtreeArray.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeArray.Tpo" "parser/$(DEPDIR)/PtreeArray.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeArray.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeArray.cc' object='parser/PtreeArray.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeArray.Po' tmpdepfile='parser/$(DEPDIR)/PtreeArray.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeArray.o `test -f 'parser/PtreeArray.cc' || echo '$(srcdir)/'`parser/PtreeArray.cc

parser/PtreeArray.obj: parser/PtreeArray.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeArray.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeArray.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeArray.obj `if test -f 'parser/PtreeArray.cc'; then $(CYGPATH_W) 'parser/PtreeArray.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeArray.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeArray.Tpo" "parser/$(DEPDIR)/PtreeArray.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeArray.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeArray.cc' object='parser/PtreeArray.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeArray.Po' tmpdepfile='parser/$(DEPDIR)/PtreeArray.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeArray.obj `if test -f 'parser/PtreeArray.cc'; then $(CYGPATH_W) 'parser/PtreeArray.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeArray.cc'; fi`

parser/PtreeArray.lo: parser/PtreeArray.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeArray.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeArray.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeArray.lo `test -f 'parser/PtreeArray.cc' || echo '$(srcdir)/'`parser/PtreeArray.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeArray.Tpo" "parser/$(DEPDIR)/PtreeArray.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeArray.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeArray.cc' object='parser/PtreeArray.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeArray.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeArray.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeArray.lo `test -f 'parser/PtreeArray.cc' || echo '$(srcdir)/'`parser/PtreeArray.cc

parser/PtreeBlock.o: parser/PtreeBlock.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeBlock.o -MD -MP -MF "parser/$(DEPDIR)/PtreeBlock.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeBlock.o `test -f 'parser/PtreeBlock.cc' || echo '$(srcdir)/'`parser/PtreeBlock.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeBlock.Tpo" "parser/$(DEPDIR)/PtreeBlock.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeBlock.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeBlock.cc' object='parser/PtreeBlock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeBlock.Po' tmpdepfile='parser/$(DEPDIR)/PtreeBlock.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeBlock.o `test -f 'parser/PtreeBlock.cc' || echo '$(srcdir)/'`parser/PtreeBlock.cc

parser/PtreeBlock.obj: parser/PtreeBlock.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeBlock.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeBlock.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeBlock.obj `if test -f 'parser/PtreeBlock.cc'; then $(CYGPATH_W) 'parser/PtreeBlock.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeBlock.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeBlock.Tpo" "parser/$(DEPDIR)/PtreeBlock.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeBlock.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeBlock.cc' object='parser/PtreeBlock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeBlock.Po' tmpdepfile='parser/$(DEPDIR)/PtreeBlock.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeBlock.obj `if test -f 'parser/PtreeBlock.cc'; then $(CYGPATH_W) 'parser/PtreeBlock.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeBlock.cc'; fi`

parser/PtreeBlock.lo: parser/PtreeBlock.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeBlock.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeBlock.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeBlock.lo `test -f 'parser/PtreeBlock.cc' || echo '$(srcdir)/'`parser/PtreeBlock.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeBlock.Tpo" "parser/$(DEPDIR)/PtreeBlock.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeBlock.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeBlock.cc' object='parser/PtreeBlock.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeBlock.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeBlock.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeBlock.lo `test -f 'parser/PtreeBlock.cc' || echo '$(srcdir)/'`parser/PtreeBlock.cc

parser/PtreeBrace.o: parser/PtreeBrace.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeBrace.o -MD -MP -MF "parser/$(DEPDIR)/PtreeBrace.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeBrace.o `test -f 'parser/PtreeBrace.cc' || echo '$(srcdir)/'`parser/PtreeBrace.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeBrace.Tpo" "parser/$(DEPDIR)/PtreeBrace.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeBrace.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeBrace.cc' object='parser/PtreeBrace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeBrace.Po' tmpdepfile='parser/$(DEPDIR)/PtreeBrace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeBrace.o `test -f 'parser/PtreeBrace.cc' || echo '$(srcdir)/'`parser/PtreeBrace.cc

parser/PtreeBrace.obj: parser/PtreeBrace.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeBrace.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeBrace.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeBrace.obj `if test -f 'parser/PtreeBrace.cc'; then $(CYGPATH_W) 'parser/PtreeBrace.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeBrace.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeBrace.Tpo" "parser/$(DEPDIR)/PtreeBrace.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeBrace.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeBrace.cc' object='parser/PtreeBrace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeBrace.Po' tmpdepfile='parser/$(DEPDIR)/PtreeBrace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeBrace.obj `if test -f 'parser/PtreeBrace.cc'; then $(CYGPATH_W) 'parser/PtreeBrace.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeBrace.cc'; fi`

parser/PtreeBrace.lo: parser/PtreeBrace.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeBrace.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeBrace.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeBrace.lo `test -f 'parser/PtreeBrace.cc' || echo '$(srcdir)/'`parser/PtreeBrace.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeBrace.Tpo" "parser/$(DEPDIR)/PtreeBrace.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeBrace.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeBrace.cc' object='parser/PtreeBrace.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeBrace.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeBrace.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeBrace.lo `test -f 'parser/PtreeBrace.cc' || echo '$(srcdir)/'`parser/PtreeBrace.cc

parser/Ptree.o: parser/Ptree.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Ptree.o -MD -MP -MF "parser/$(DEPDIR)/Ptree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Ptree.o `test -f 'parser/Ptree.cc' || echo '$(srcdir)/'`parser/Ptree.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Ptree.Tpo" "parser/$(DEPDIR)/Ptree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Ptree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Ptree.cc' object='parser/Ptree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Ptree.Po' tmpdepfile='parser/$(DEPDIR)/Ptree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Ptree.o `test -f 'parser/Ptree.cc' || echo '$(srcdir)/'`parser/Ptree.cc

parser/Ptree.obj: parser/Ptree.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Ptree.obj -MD -MP -MF "parser/$(DEPDIR)/Ptree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Ptree.obj `if test -f 'parser/Ptree.cc'; then $(CYGPATH_W) 'parser/Ptree.cc'; else $(CYGPATH_W) '$(srcdir)/parser/Ptree.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Ptree.Tpo" "parser/$(DEPDIR)/Ptree.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Ptree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Ptree.cc' object='parser/Ptree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Ptree.Po' tmpdepfile='parser/$(DEPDIR)/Ptree.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Ptree.obj `if test -f 'parser/Ptree.cc'; then $(CYGPATH_W) 'parser/Ptree.cc'; else $(CYGPATH_W) '$(srcdir)/parser/Ptree.cc'; fi`

parser/Ptree.lo: parser/Ptree.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/Ptree.lo -MD -MP -MF "parser/$(DEPDIR)/Ptree.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/Ptree.lo `test -f 'parser/Ptree.cc' || echo '$(srcdir)/'`parser/Ptree.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/Ptree.Tpo" "parser/$(DEPDIR)/Ptree.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/Ptree.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/Ptree.cc' object='parser/Ptree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/Ptree.Plo' tmpdepfile='parser/$(DEPDIR)/Ptree.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/Ptree.lo `test -f 'parser/Ptree.cc' || echo '$(srcdir)/'`parser/Ptree.cc

parser/PtreeClassBody.o: parser/PtreeClassBody.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeClassBody.o -MD -MP -MF "parser/$(DEPDIR)/PtreeClassBody.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeClassBody.o `test -f 'parser/PtreeClassBody.cc' || echo '$(srcdir)/'`parser/PtreeClassBody.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeClassBody.Tpo" "parser/$(DEPDIR)/PtreeClassBody.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeClassBody.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeClassBody.cc' object='parser/PtreeClassBody.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeClassBody.Po' tmpdepfile='parser/$(DEPDIR)/PtreeClassBody.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeClassBody.o `test -f 'parser/PtreeClassBody.cc' || echo '$(srcdir)/'`parser/PtreeClassBody.cc

parser/PtreeClassBody.obj: parser/PtreeClassBody.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeClassBody.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeClassBody.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeClassBody.obj `if test -f 'parser/PtreeClassBody.cc'; then $(CYGPATH_W) 'parser/PtreeClassBody.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeClassBody.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeClassBody.Tpo" "parser/$(DEPDIR)/PtreeClassBody.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeClassBody.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeClassBody.cc' object='parser/PtreeClassBody.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeClassBody.Po' tmpdepfile='parser/$(DEPDIR)/PtreeClassBody.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeClassBody.obj `if test -f 'parser/PtreeClassBody.cc'; then $(CYGPATH_W) 'parser/PtreeClassBody.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeClassBody.cc'; fi`

parser/PtreeClassBody.lo: parser/PtreeClassBody.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeClassBody.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeClassBody.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeClassBody.lo `test -f 'parser/PtreeClassBody.cc' || echo '$(srcdir)/'`parser/PtreeClassBody.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeClassBody.Tpo" "parser/$(DEPDIR)/PtreeClassBody.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeClassBody.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeClassBody.cc' object='parser/PtreeClassBody.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeClassBody.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeClassBody.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeClassBody.lo `test -f 'parser/PtreeClassBody.cc' || echo '$(srcdir)/'`parser/PtreeClassBody.cc

parser/PtreeClassSpec.o: parser/PtreeClassSpec.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeClassSpec.o -MD -MP -MF "parser/$(DEPDIR)/PtreeClassSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeClassSpec.o `test -f 'parser/PtreeClassSpec.cc' || echo '$(srcdir)/'`parser/PtreeClassSpec.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeClassSpec.Tpo" "parser/$(DEPDIR)/PtreeClassSpec.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeClassSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeClassSpec.cc' object='parser/PtreeClassSpec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeClassSpec.Po' tmpdepfile='parser/$(DEPDIR)/PtreeClassSpec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeClassSpec.o `test -f 'parser/PtreeClassSpec.cc' || echo '$(srcdir)/'`parser/PtreeClassSpec.cc

parser/PtreeClassSpec.obj: parser/PtreeClassSpec.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeClassSpec.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeClassSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeClassSpec.obj `if test -f 'parser/PtreeClassSpec.cc'; then $(CYGPATH_W) 'parser/PtreeClassSpec.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeClassSpec.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeClassSpec.Tpo" "parser/$(DEPDIR)/PtreeClassSpec.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeClassSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeClassSpec.cc' object='parser/PtreeClassSpec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeClassSpec.Po' tmpdepfile='parser/$(DEPDIR)/PtreeClassSpec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeClassSpec.obj `if test -f 'parser/PtreeClassSpec.cc'; then $(CYGPATH_W) 'parser/PtreeClassSpec.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeClassSpec.cc'; fi`

parser/PtreeClassSpec.lo: parser/PtreeClassSpec.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeClassSpec.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeClassSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeClassSpec.lo `test -f 'parser/PtreeClassSpec.cc' || echo '$(srcdir)/'`parser/PtreeClassSpec.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeClassSpec.Tpo" "parser/$(DEPDIR)/PtreeClassSpec.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeClassSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeClassSpec.cc' object='parser/PtreeClassSpec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeClassSpec.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeClassSpec.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeClassSpec.lo `test -f 'parser/PtreeClassSpec.cc' || echo '$(srcdir)/'`parser/PtreeClassSpec.cc

parser/PtreeDeclaration.o: parser/PtreeDeclaration.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeDeclaration.o -MD -MP -MF "parser/$(DEPDIR)/PtreeDeclaration.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeDeclaration.o `test -f 'parser/PtreeDeclaration.cc' || echo '$(srcdir)/'`parser/PtreeDeclaration.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeDeclaration.Tpo" "parser/$(DEPDIR)/PtreeDeclaration.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeDeclaration.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeDeclaration.cc' object='parser/PtreeDeclaration.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeDeclaration.Po' tmpdepfile='parser/$(DEPDIR)/PtreeDeclaration.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeDeclaration.o `test -f 'parser/PtreeDeclaration.cc' || echo '$(srcdir)/'`parser/PtreeDeclaration.cc

parser/PtreeDeclaration.obj: parser/PtreeDeclaration.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeDeclaration.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeDeclaration.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeDeclaration.obj `if test -f 'parser/PtreeDeclaration.cc'; then $(CYGPATH_W) 'parser/PtreeDeclaration.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeDeclaration.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeDeclaration.Tpo" "parser/$(DEPDIR)/PtreeDeclaration.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeDeclaration.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeDeclaration.cc' object='parser/PtreeDeclaration.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeDeclaration.Po' tmpdepfile='parser/$(DEPDIR)/PtreeDeclaration.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeDeclaration.obj `if test -f 'parser/PtreeDeclaration.cc'; then $(CYGPATH_W) 'parser/PtreeDeclaration.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeDeclaration.cc'; fi`

parser/PtreeDeclaration.lo: parser/PtreeDeclaration.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeDeclaration.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeDeclaration.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeDeclaration.lo `test -f 'parser/PtreeDeclaration.cc' || echo '$(srcdir)/'`parser/PtreeDeclaration.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeDeclaration.Tpo" "parser/$(DEPDIR)/PtreeDeclaration.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeDeclaration.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeDeclaration.cc' object='parser/PtreeDeclaration.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeDeclaration.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeDeclaration.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeDeclaration.lo `test -f 'parser/PtreeDeclaration.cc' || echo '$(srcdir)/'`parser/PtreeDeclaration.cc

parser/PtreeDeclarator.o: parser/PtreeDeclarator.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeDeclarator.o -MD -MP -MF "parser/$(DEPDIR)/PtreeDeclarator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeDeclarator.o `test -f 'parser/PtreeDeclarator.cc' || echo '$(srcdir)/'`parser/PtreeDeclarator.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeDeclarator.Tpo" "parser/$(DEPDIR)/PtreeDeclarator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeDeclarator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeDeclarator.cc' object='parser/PtreeDeclarator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeDeclarator.Po' tmpdepfile='parser/$(DEPDIR)/PtreeDeclarator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeDeclarator.o `test -f 'parser/PtreeDeclarator.cc' || echo '$(srcdir)/'`parser/PtreeDeclarator.cc

parser/PtreeDeclarator.obj: parser/PtreeDeclarator.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeDeclarator.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeDeclarator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeDeclarator.obj `if test -f 'parser/PtreeDeclarator.cc'; then $(CYGPATH_W) 'parser/PtreeDeclarator.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeDeclarator.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeDeclarator.Tpo" "parser/$(DEPDIR)/PtreeDeclarator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeDeclarator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeDeclarator.cc' object='parser/PtreeDeclarator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeDeclarator.Po' tmpdepfile='parser/$(DEPDIR)/PtreeDeclarator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeDeclarator.obj `if test -f 'parser/PtreeDeclarator.cc'; then $(CYGPATH_W) 'parser/PtreeDeclarator.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeDeclarator.cc'; fi`

parser/PtreeDeclarator.lo: parser/PtreeDeclarator.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeDeclarator.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeDeclarator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeDeclarator.lo `test -f 'parser/PtreeDeclarator.cc' || echo '$(srcdir)/'`parser/PtreeDeclarator.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeDeclarator.Tpo" "parser/$(DEPDIR)/PtreeDeclarator.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeDeclarator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeDeclarator.cc' object='parser/PtreeDeclarator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeDeclarator.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeDeclarator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeDeclarator.lo `test -f 'parser/PtreeDeclarator.cc' || echo '$(srcdir)/'`parser/PtreeDeclarator.cc

parser/PtreeEnumSpec.o: parser/PtreeEnumSpec.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeEnumSpec.o -MD -MP -MF "parser/$(DEPDIR)/PtreeEnumSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeEnumSpec.o `test -f 'parser/PtreeEnumSpec.cc' || echo '$(srcdir)/'`parser/PtreeEnumSpec.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeEnumSpec.Tpo" "parser/$(DEPDIR)/PtreeEnumSpec.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeEnumSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeEnumSpec.cc' object='parser/PtreeEnumSpec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeEnumSpec.Po' tmpdepfile='parser/$(DEPDIR)/PtreeEnumSpec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeEnumSpec.o `test -f 'parser/PtreeEnumSpec.cc' || echo '$(srcdir)/'`parser/PtreeEnumSpec.cc

parser/PtreeEnumSpec.obj: parser/PtreeEnumSpec.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeEnumSpec.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeEnumSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeEnumSpec.obj `if test -f 'parser/PtreeEnumSpec.cc'; then $(CYGPATH_W) 'parser/PtreeEnumSpec.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeEnumSpec.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeEnumSpec.Tpo" "parser/$(DEPDIR)/PtreeEnumSpec.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeEnumSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeEnumSpec.cc' object='parser/PtreeEnumSpec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeEnumSpec.Po' tmpdepfile='parser/$(DEPDIR)/PtreeEnumSpec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeEnumSpec.obj `if test -f 'parser/PtreeEnumSpec.cc'; then $(CYGPATH_W) 'parser/PtreeEnumSpec.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeEnumSpec.cc'; fi`

parser/PtreeEnumSpec.lo: parser/PtreeEnumSpec.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeEnumSpec.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeEnumSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeEnumSpec.lo `test -f 'parser/PtreeEnumSpec.cc' || echo '$(srcdir)/'`parser/PtreeEnumSpec.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeEnumSpec.Tpo" "parser/$(DEPDIR)/PtreeEnumSpec.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeEnumSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeEnumSpec.cc' object='parser/PtreeEnumSpec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeEnumSpec.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeEnumSpec.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeEnumSpec.lo `test -f 'parser/PtreeEnumSpec.cc' || echo '$(srcdir)/'`parser/PtreeEnumSpec.cc

parser/PtreeExprStatement.o: parser/PtreeExprStatement.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeExprStatement.o -MD -MP -MF "parser/$(DEPDIR)/PtreeExprStatement.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeExprStatement.o `test -f 'parser/PtreeExprStatement.cc' || echo '$(srcdir)/'`parser/PtreeExprStatement.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeExprStatement.Tpo" "parser/$(DEPDIR)/PtreeExprStatement.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeExprStatement.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeExprStatement.cc' object='parser/PtreeExprStatement.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeExprStatement.Po' tmpdepfile='parser/$(DEPDIR)/PtreeExprStatement.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeExprStatement.o `test -f 'parser/PtreeExprStatement.cc' || echo '$(srcdir)/'`parser/PtreeExprStatement.cc

parser/PtreeExprStatement.obj: parser/PtreeExprStatement.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeExprStatement.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeExprStatement.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeExprStatement.obj `if test -f 'parser/PtreeExprStatement.cc'; then $(CYGPATH_W) 'parser/PtreeExprStatement.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeExprStatement.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeExprStatement.Tpo" "parser/$(DEPDIR)/PtreeExprStatement.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeExprStatement.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeExprStatement.cc' object='parser/PtreeExprStatement.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeExprStatement.Po' tmpdepfile='parser/$(DEPDIR)/PtreeExprStatement.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeExprStatement.obj `if test -f 'parser/PtreeExprStatement.cc'; then $(CYGPATH_W) 'parser/PtreeExprStatement.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeExprStatement.cc'; fi`

parser/PtreeExprStatement.lo: parser/PtreeExprStatement.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeExprStatement.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeExprStatement.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeExprStatement.lo `test -f 'parser/PtreeExprStatement.cc' || echo '$(srcdir)/'`parser/PtreeExprStatement.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeExprStatement.Tpo" "parser/$(DEPDIR)/PtreeExprStatement.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeExprStatement.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeExprStatement.cc' object='parser/PtreeExprStatement.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeExprStatement.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeExprStatement.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeExprStatement.lo `test -f 'parser/PtreeExprStatement.cc' || echo '$(srcdir)/'`parser/PtreeExprStatement.cc

parser/PtreeExternTemplate.o: parser/PtreeExternTemplate.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeExternTemplate.o -MD -MP -MF "parser/$(DEPDIR)/PtreeExternTemplate.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeExternTemplate.o `test -f 'parser/PtreeExternTemplate.cc' || echo '$(srcdir)/'`parser/PtreeExternTemplate.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeExternTemplate.Tpo" "parser/$(DEPDIR)/PtreeExternTemplate.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeExternTemplate.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeExternTemplate.cc' object='parser/PtreeExternTemplate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeExternTemplate.Po' tmpdepfile='parser/$(DEPDIR)/PtreeExternTemplate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeExternTemplate.o `test -f 'parser/PtreeExternTemplate.cc' || echo '$(srcdir)/'`parser/PtreeExternTemplate.cc

parser/PtreeExternTemplate.obj: parser/PtreeExternTemplate.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeExternTemplate.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeExternTemplate.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeExternTemplate.obj `if test -f 'parser/PtreeExternTemplate.cc'; then $(CYGPATH_W) 'parser/PtreeExternTemplate.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeExternTemplate.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeExternTemplate.Tpo" "parser/$(DEPDIR)/PtreeExternTemplate.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeExternTemplate.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeExternTemplate.cc' object='parser/PtreeExternTemplate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeExternTemplate.Po' tmpdepfile='parser/$(DEPDIR)/PtreeExternTemplate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeExternTemplate.obj `if test -f 'parser/PtreeExternTemplate.cc'; then $(CYGPATH_W) 'parser/PtreeExternTemplate.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeExternTemplate.cc'; fi`

parser/PtreeExternTemplate.lo: parser/PtreeExternTemplate.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeExternTemplate.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeExternTemplate.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeExternTemplate.lo `test -f 'parser/PtreeExternTemplate.cc' || echo '$(srcdir)/'`parser/PtreeExternTemplate.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeExternTemplate.Tpo" "parser/$(DEPDIR)/PtreeExternTemplate.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeExternTemplate.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeExternTemplate.cc' object='parser/PtreeExternTemplate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeExternTemplate.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeExternTemplate.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeExternTemplate.lo `test -f 'parser/PtreeExternTemplate.cc' || echo '$(srcdir)/'`parser/PtreeExternTemplate.cc

parser/PtreeFstyleCastExpr.o: parser/PtreeFstyleCastExpr.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeFstyleCastExpr.o -MD -MP -MF "parser/$(DEPDIR)/PtreeFstyleCastExpr.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeFstyleCastExpr.o `test -f 'parser/PtreeFstyleCastExpr.cc' || echo '$(srcdir)/'`parser/PtreeFstyleCastExpr.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeFstyleCastExpr.Tpo" "parser/$(DEPDIR)/PtreeFstyleCastExpr.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeFstyleCastExpr.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeFstyleCastExpr.cc' object='parser/PtreeFstyleCastExpr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeFstyleCastExpr.Po' tmpdepfile='parser/$(DEPDIR)/PtreeFstyleCastExpr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeFstyleCastExpr.o `test -f 'parser/PtreeFstyleCastExpr.cc' || echo '$(srcdir)/'`parser/PtreeFstyleCastExpr.cc

parser/PtreeFstyleCastExpr.obj: parser/PtreeFstyleCastExpr.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeFstyleCastExpr.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeFstyleCastExpr.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeFstyleCastExpr.obj `if test -f 'parser/PtreeFstyleCastExpr.cc'; then $(CYGPATH_W) 'parser/PtreeFstyleCastExpr.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeFstyleCastExpr.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeFstyleCastExpr.Tpo" "parser/$(DEPDIR)/PtreeFstyleCastExpr.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeFstyleCastExpr.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeFstyleCastExpr.cc' object='parser/PtreeFstyleCastExpr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeFstyleCastExpr.Po' tmpdepfile='parser/$(DEPDIR)/PtreeFstyleCastExpr.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeFstyleCastExpr.obj `if test -f 'parser/PtreeFstyleCastExpr.cc'; then $(CYGPATH_W) 'parser/PtreeFstyleCastExpr.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeFstyleCastExpr.cc'; fi`

parser/PtreeFstyleCastExpr.lo: parser/PtreeFstyleCastExpr.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeFstyleCastExpr.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeFstyleCastExpr.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeFstyleCastExpr.lo `test -f 'parser/PtreeFstyleCastExpr.cc' || echo '$(srcdir)/'`parser/PtreeFstyleCastExpr.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeFstyleCastExpr.Tpo" "parser/$(DEPDIR)/PtreeFstyleCastExpr.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeFstyleCastExpr.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeFstyleCastExpr.cc' object='parser/PtreeFstyleCastExpr.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeFstyleCastExpr.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeFstyleCastExpr.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeFstyleCastExpr.lo `test -f 'parser/PtreeFstyleCastExpr.cc' || echo '$(srcdir)/'`parser/PtreeFstyleCastExpr.cc

parser/PtreeConstants.o: parser/PtreeConstants.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeConstants.o -MD -MP -MF "parser/$(DEPDIR)/PtreeConstants.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeConstants.o `test -f 'parser/PtreeConstants.cc' || echo '$(srcdir)/'`parser/PtreeConstants.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeConstants.Tpo" "parser/$(DEPDIR)/PtreeConstants.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeConstants.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeConstants.cc' object='parser/PtreeConstants.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeConstants.Po' tmpdepfile='parser/$(DEPDIR)/PtreeConstants.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeConstants.o `test -f 'parser/PtreeConstants.cc' || echo '$(srcdir)/'`parser/PtreeConstants.cc

parser/PtreeConstants.obj: parser/PtreeConstants.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeConstants.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeConstants.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeConstants.obj `if test -f 'parser/PtreeConstants.cc'; then $(CYGPATH_W) 'parser/PtreeConstants.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeConstants.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeConstants.Tpo" "parser/$(DEPDIR)/PtreeConstants.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeConstants.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeConstants.cc' object='parser/PtreeConstants.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeConstants.Po' tmpdepfile='parser/$(DEPDIR)/PtreeConstants.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeConstants.obj `if test -f 'parser/PtreeConstants.cc'; then $(CYGPATH_W) 'parser/PtreeConstants.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeConstants.cc'; fi`

parser/PtreeConstants.lo: parser/PtreeConstants.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeConstants.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeConstants.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeConstants.lo `test -f 'parser/PtreeConstants.cc' || echo '$(srcdir)/'`parser/PtreeConstants.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeConstants.Tpo" "parser/$(DEPDIR)/PtreeConstants.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeConstants.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeConstants.cc' object='parser/PtreeConstants.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeConstants.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeConstants.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeConstants.lo `test -f 'parser/PtreeConstants.cc' || echo '$(srcdir)/'`parser/PtreeConstants.cc

parser/ptree-generated.o: parser/ptree-generated.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/ptree-generated.o -MD -MP -MF "parser/$(DEPDIR)/ptree-generated.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/ptree-generated.o `test -f 'parser/ptree-generated.cc' || echo '$(srcdir)/'`parser/ptree-generated.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/ptree-generated.Tpo" "parser/$(DEPDIR)/ptree-generated.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/ptree-generated.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/ptree-generated.cc' object='parser/ptree-generated.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/ptree-generated.Po' tmpdepfile='parser/$(DEPDIR)/ptree-generated.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/ptree-generated.o `test -f 'parser/ptree-generated.cc' || echo '$(srcdir)/'`parser/ptree-generated.cc

parser/ptree-generated.obj: parser/ptree-generated.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/ptree-generated.obj -MD -MP -MF "parser/$(DEPDIR)/ptree-generated.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/ptree-generated.obj `if test -f 'parser/ptree-generated.cc'; then $(CYGPATH_W) 'parser/ptree-generated.cc'; else $(CYGPATH_W) '$(srcdir)/parser/ptree-generated.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/ptree-generated.Tpo" "parser/$(DEPDIR)/ptree-generated.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/ptree-generated.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/ptree-generated.cc' object='parser/ptree-generated.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/ptree-generated.Po' tmpdepfile='parser/$(DEPDIR)/ptree-generated.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/ptree-generated.obj `if test -f 'parser/ptree-generated.cc'; then $(CYGPATH_W) 'parser/ptree-generated.cc'; else $(CYGPATH_W) '$(srcdir)/parser/ptree-generated.cc'; fi`

parser/ptree-generated.lo: parser/ptree-generated.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/ptree-generated.lo -MD -MP -MF "parser/$(DEPDIR)/ptree-generated.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/ptree-generated.lo `test -f 'parser/ptree-generated.cc' || echo '$(srcdir)/'`parser/ptree-generated.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/ptree-generated.Tpo" "parser/$(DEPDIR)/ptree-generated.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/ptree-generated.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/ptree-generated.cc' object='parser/ptree-generated.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/ptree-generated.Plo' tmpdepfile='parser/$(DEPDIR)/ptree-generated.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/ptree-generated.lo `test -f 'parser/ptree-generated.cc' || echo '$(srcdir)/'`parser/ptree-generated.cc

parser/PtreeLinkageSpec.o: parser/PtreeLinkageSpec.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeLinkageSpec.o -MD -MP -MF "parser/$(DEPDIR)/PtreeLinkageSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeLinkageSpec.o `test -f 'parser/PtreeLinkageSpec.cc' || echo '$(srcdir)/'`parser/PtreeLinkageSpec.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeLinkageSpec.Tpo" "parser/$(DEPDIR)/PtreeLinkageSpec.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeLinkageSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeLinkageSpec.cc' object='parser/PtreeLinkageSpec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeLinkageSpec.Po' tmpdepfile='parser/$(DEPDIR)/PtreeLinkageSpec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeLinkageSpec.o `test -f 'parser/PtreeLinkageSpec.cc' || echo '$(srcdir)/'`parser/PtreeLinkageSpec.cc

parser/PtreeLinkageSpec.obj: parser/PtreeLinkageSpec.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeLinkageSpec.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeLinkageSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeLinkageSpec.obj `if test -f 'parser/PtreeLinkageSpec.cc'; then $(CYGPATH_W) 'parser/PtreeLinkageSpec.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeLinkageSpec.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeLinkageSpec.Tpo" "parser/$(DEPDIR)/PtreeLinkageSpec.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeLinkageSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeLinkageSpec.cc' object='parser/PtreeLinkageSpec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeLinkageSpec.Po' tmpdepfile='parser/$(DEPDIR)/PtreeLinkageSpec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeLinkageSpec.obj `if test -f 'parser/PtreeLinkageSpec.cc'; then $(CYGPATH_W) 'parser/PtreeLinkageSpec.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeLinkageSpec.cc'; fi`

parser/PtreeLinkageSpec.lo: parser/PtreeLinkageSpec.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeLinkageSpec.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeLinkageSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeLinkageSpec.lo `test -f 'parser/PtreeLinkageSpec.cc' || echo '$(srcdir)/'`parser/PtreeLinkageSpec.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeLinkageSpec.Tpo" "parser/$(DEPDIR)/PtreeLinkageSpec.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeLinkageSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeLinkageSpec.cc' object='parser/PtreeLinkageSpec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeLinkageSpec.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeLinkageSpec.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeLinkageSpec.lo `test -f 'parser/PtreeLinkageSpec.cc' || echo '$(srcdir)/'`parser/PtreeLinkageSpec.cc

parser/PtreeMetaclassDecl.o: parser/PtreeMetaclassDecl.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeMetaclassDecl.o -MD -MP -MF "parser/$(DEPDIR)/PtreeMetaclassDecl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeMetaclassDecl.o `test -f 'parser/PtreeMetaclassDecl.cc' || echo '$(srcdir)/'`parser/PtreeMetaclassDecl.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeMetaclassDecl.Tpo" "parser/$(DEPDIR)/PtreeMetaclassDecl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeMetaclassDecl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeMetaclassDecl.cc' object='parser/PtreeMetaclassDecl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeMetaclassDecl.Po' tmpdepfile='parser/$(DEPDIR)/PtreeMetaclassDecl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeMetaclassDecl.o `test -f 'parser/PtreeMetaclassDecl.cc' || echo '$(srcdir)/'`parser/PtreeMetaclassDecl.cc

parser/PtreeMetaclassDecl.obj: parser/PtreeMetaclassDecl.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeMetaclassDecl.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeMetaclassDecl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeMetaclassDecl.obj `if test -f 'parser/PtreeMetaclassDecl.cc'; then $(CYGPATH_W) 'parser/PtreeMetaclassDecl.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeMetaclassDecl.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeMetaclassDecl.Tpo" "parser/$(DEPDIR)/PtreeMetaclassDecl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeMetaclassDecl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeMetaclassDecl.cc' object='parser/PtreeMetaclassDecl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeMetaclassDecl.Po' tmpdepfile='parser/$(DEPDIR)/PtreeMetaclassDecl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeMetaclassDecl.obj `if test -f 'parser/PtreeMetaclassDecl.cc'; then $(CYGPATH_W) 'parser/PtreeMetaclassDecl.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeMetaclassDecl.cc'; fi`

parser/PtreeMetaclassDecl.lo: parser/PtreeMetaclassDecl.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeMetaclassDecl.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeMetaclassDecl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeMetaclassDecl.lo `test -f 'parser/PtreeMetaclassDecl.cc' || echo '$(srcdir)/'`parser/PtreeMetaclassDecl.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeMetaclassDecl.Tpo" "parser/$(DEPDIR)/PtreeMetaclassDecl.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeMetaclassDecl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeMetaclassDecl.cc' object='parser/PtreeMetaclassDecl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeMetaclassDecl.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeMetaclassDecl.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeMetaclassDecl.lo `test -f 'parser/PtreeMetaclassDecl.cc' || echo '$(srcdir)/'`parser/PtreeMetaclassDecl.cc

parser/PtreeName.o: parser/PtreeName.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeName.o -MD -MP -MF "parser/$(DEPDIR)/PtreeName.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeName.o `test -f 'parser/PtreeName.cc' || echo '$(srcdir)/'`parser/PtreeName.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeName.Tpo" "parser/$(DEPDIR)/PtreeName.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeName.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeName.cc' object='parser/PtreeName.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeName.Po' tmpdepfile='parser/$(DEPDIR)/PtreeName.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeName.o `test -f 'parser/PtreeName.cc' || echo '$(srcdir)/'`parser/PtreeName.cc

parser/PtreeName.obj: parser/PtreeName.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeName.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeName.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeName.obj `if test -f 'parser/PtreeName.cc'; then $(CYGPATH_W) 'parser/PtreeName.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeName.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeName.Tpo" "parser/$(DEPDIR)/PtreeName.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeName.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeName.cc' object='parser/PtreeName.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeName.Po' tmpdepfile='parser/$(DEPDIR)/PtreeName.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeName.obj `if test -f 'parser/PtreeName.cc'; then $(CYGPATH_W) 'parser/PtreeName.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeName.cc'; fi`

parser/PtreeName.lo: parser/PtreeName.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeName.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeName.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeName.lo `test -f 'parser/PtreeName.cc' || echo '$(srcdir)/'`parser/PtreeName.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeName.Tpo" "parser/$(DEPDIR)/PtreeName.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeName.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeName.cc' object='parser/PtreeName.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeName.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeName.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeName.lo `test -f 'parser/PtreeName.cc' || echo '$(srcdir)/'`parser/PtreeName.cc

parser/PtreeNamespaceAlias.o: parser/PtreeNamespaceAlias.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeNamespaceAlias.o -MD -MP -MF "parser/$(DEPDIR)/PtreeNamespaceAlias.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeNamespaceAlias.o `test -f 'parser/PtreeNamespaceAlias.cc' || echo '$(srcdir)/'`parser/PtreeNamespaceAlias.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeNamespaceAlias.Tpo" "parser/$(DEPDIR)/PtreeNamespaceAlias.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeNamespaceAlias.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeNamespaceAlias.cc' object='parser/PtreeNamespaceAlias.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeNamespaceAlias.Po' tmpdepfile='parser/$(DEPDIR)/PtreeNamespaceAlias.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeNamespaceAlias.o `test -f 'parser/PtreeNamespaceAlias.cc' || echo '$(srcdir)/'`parser/PtreeNamespaceAlias.cc

parser/PtreeNamespaceAlias.obj: parser/PtreeNamespaceAlias.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeNamespaceAlias.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeNamespaceAlias.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeNamespaceAlias.obj `if test -f 'parser/PtreeNamespaceAlias.cc'; then $(CYGPATH_W) 'parser/PtreeNamespaceAlias.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeNamespaceAlias.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeNamespaceAlias.Tpo" "parser/$(DEPDIR)/PtreeNamespaceAlias.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeNamespaceAlias.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeNamespaceAlias.cc' object='parser/PtreeNamespaceAlias.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeNamespaceAlias.Po' tmpdepfile='parser/$(DEPDIR)/PtreeNamespaceAlias.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeNamespaceAlias.obj `if test -f 'parser/PtreeNamespaceAlias.cc'; then $(CYGPATH_W) 'parser/PtreeNamespaceAlias.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeNamespaceAlias.cc'; fi`

parser/PtreeNamespaceAlias.lo: parser/PtreeNamespaceAlias.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeNamespaceAlias.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeNamespaceAlias.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeNamespaceAlias.lo `test -f 'parser/PtreeNamespaceAlias.cc' || echo '$(srcdir)/'`parser/PtreeNamespaceAlias.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeNamespaceAlias.Tpo" "parser/$(DEPDIR)/PtreeNamespaceAlias.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeNamespaceAlias.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeNamespaceAlias.cc' object='parser/PtreeNamespaceAlias.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeNamespaceAlias.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeNamespaceAlias.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeNamespaceAlias.lo `test -f 'parser/PtreeNamespaceAlias.cc' || echo '$(srcdir)/'`parser/PtreeNamespaceAlias.cc

parser/PtreeNamespaceSpec.o: parser/PtreeNamespaceSpec.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeNamespaceSpec.o -MD -MP -MF "parser/$(DEPDIR)/PtreeNamespaceSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeNamespaceSpec.o `test -f 'parser/PtreeNamespaceSpec.cc' || echo '$(srcdir)/'`parser/PtreeNamespaceSpec.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeNamespaceSpec.Tpo" "parser/$(DEPDIR)/PtreeNamespaceSpec.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeNamespaceSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeNamespaceSpec.cc' object='parser/PtreeNamespaceSpec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeNamespaceSpec.Po' tmpdepfile='parser/$(DEPDIR)/PtreeNamespaceSpec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeNamespaceSpec.o `test -f 'parser/PtreeNamespaceSpec.cc' || echo '$(srcdir)/'`parser/PtreeNamespaceSpec.cc

parser/PtreeNamespaceSpec.obj: parser/PtreeNamespaceSpec.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeNamespaceSpec.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeNamespaceSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeNamespaceSpec.obj `if test -f 'parser/PtreeNamespaceSpec.cc'; then $(CYGPATH_W) 'parser/PtreeNamespaceSpec.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeNamespaceSpec.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeNamespaceSpec.Tpo" "parser/$(DEPDIR)/PtreeNamespaceSpec.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeNamespaceSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeNamespaceSpec.cc' object='parser/PtreeNamespaceSpec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeNamespaceSpec.Po' tmpdepfile='parser/$(DEPDIR)/PtreeNamespaceSpec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeNamespaceSpec.obj `if test -f 'parser/PtreeNamespaceSpec.cc'; then $(CYGPATH_W) 'parser/PtreeNamespaceSpec.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeNamespaceSpec.cc'; fi`

parser/PtreeNamespaceSpec.lo: parser/PtreeNamespaceSpec.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeNamespaceSpec.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeNamespaceSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeNamespaceSpec.lo `test -f 'parser/PtreeNamespaceSpec.cc' || echo '$(srcdir)/'`parser/PtreeNamespaceSpec.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeNamespaceSpec.Tpo" "parser/$(DEPDIR)/PtreeNamespaceSpec.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeNamespaceSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeNamespaceSpec.cc' object='parser/PtreeNamespaceSpec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeNamespaceSpec.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeNamespaceSpec.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeNamespaceSpec.lo `test -f 'parser/PtreeNamespaceSpec.cc' || echo '$(srcdir)/'`parser/PtreeNamespaceSpec.cc

parser/PtreeTemplateDecl.o: parser/PtreeTemplateDecl.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeTemplateDecl.o -MD -MP -MF "parser/$(DEPDIR)/PtreeTemplateDecl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeTemplateDecl.o `test -f 'parser/PtreeTemplateDecl.cc' || echo '$(srcdir)/'`parser/PtreeTemplateDecl.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeTemplateDecl.Tpo" "parser/$(DEPDIR)/PtreeTemplateDecl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeTemplateDecl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeTemplateDecl.cc' object='parser/PtreeTemplateDecl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeTemplateDecl.Po' tmpdepfile='parser/$(DEPDIR)/PtreeTemplateDecl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeTemplateDecl.o `test -f 'parser/PtreeTemplateDecl.cc' || echo '$(srcdir)/'`parser/PtreeTemplateDecl.cc

parser/PtreeTemplateDecl.obj: parser/PtreeTemplateDecl.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeTemplateDecl.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeTemplateDecl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeTemplateDecl.obj `if test -f 'parser/PtreeTemplateDecl.cc'; then $(CYGPATH_W) 'parser/PtreeTemplateDecl.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeTemplateDecl.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeTemplateDecl.Tpo" "parser/$(DEPDIR)/PtreeTemplateDecl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeTemplateDecl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeTemplateDecl.cc' object='parser/PtreeTemplateDecl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeTemplateDecl.Po' tmpdepfile='parser/$(DEPDIR)/PtreeTemplateDecl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeTemplateDecl.obj `if test -f 'parser/PtreeTemplateDecl.cc'; then $(CYGPATH_W) 'parser/PtreeTemplateDecl.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeTemplateDecl.cc'; fi`

parser/PtreeTemplateDecl.lo: parser/PtreeTemplateDecl.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeTemplateDecl.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeTemplateDecl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeTemplateDecl.lo `test -f 'parser/PtreeTemplateDecl.cc' || echo '$(srcdir)/'`parser/PtreeTemplateDecl.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeTemplateDecl.Tpo" "parser/$(DEPDIR)/PtreeTemplateDecl.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeTemplateDecl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeTemplateDecl.cc' object='parser/PtreeTemplateDecl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeTemplateDecl.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeTemplateDecl.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeTemplateDecl.lo `test -f 'parser/PtreeTemplateDecl.cc' || echo '$(srcdir)/'`parser/PtreeTemplateDecl.cc

parser/PtreeTemplateInstantiation.o: parser/PtreeTemplateInstantiation.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeTemplateInstantiation.o -MD -MP -MF "parser/$(DEPDIR)/PtreeTemplateInstantiation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeTemplateInstantiation.o `test -f 'parser/PtreeTemplateInstantiation.cc' || echo '$(srcdir)/'`parser/PtreeTemplateInstantiation.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeTemplateInstantiation.Tpo" "parser/$(DEPDIR)/PtreeTemplateInstantiation.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeTemplateInstantiation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeTemplateInstantiation.cc' object='parser/PtreeTemplateInstantiation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeTemplateInstantiation.Po' tmpdepfile='parser/$(DEPDIR)/PtreeTemplateInstantiation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeTemplateInstantiation.o `test -f 'parser/PtreeTemplateInstantiation.cc' || echo '$(srcdir)/'`parser/PtreeTemplateInstantiation.cc

parser/PtreeTemplateInstantiation.obj: parser/PtreeTemplateInstantiation.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeTemplateInstantiation.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeTemplateInstantiation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeTemplateInstantiation.obj `if test -f 'parser/PtreeTemplateInstantiation.cc'; then $(CYGPATH_W) 'parser/PtreeTemplateInstantiation.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeTemplateInstantiation.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeTemplateInstantiation.Tpo" "parser/$(DEPDIR)/PtreeTemplateInstantiation.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeTemplateInstantiation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeTemplateInstantiation.cc' object='parser/PtreeTemplateInstantiation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeTemplateInstantiation.Po' tmpdepfile='parser/$(DEPDIR)/PtreeTemplateInstantiation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeTemplateInstantiation.obj `if test -f 'parser/PtreeTemplateInstantiation.cc'; then $(CYGPATH_W) 'parser/PtreeTemplateInstantiation.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeTemplateInstantiation.cc'; fi`

parser/PtreeTemplateInstantiation.lo: parser/PtreeTemplateInstantiation.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeTemplateInstantiation.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeTemplateInstantiation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeTemplateInstantiation.lo `test -f 'parser/PtreeTemplateInstantiation.cc' || echo '$(srcdir)/'`parser/PtreeTemplateInstantiation.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeTemplateInstantiation.Tpo" "parser/$(DEPDIR)/PtreeTemplateInstantiation.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeTemplateInstantiation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeTemplateInstantiation.cc' object='parser/PtreeTemplateInstantiation.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeTemplateInstantiation.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeTemplateInstantiation.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeTemplateInstantiation.lo `test -f 'parser/PtreeTemplateInstantiation.cc' || echo '$(srcdir)/'`parser/PtreeTemplateInstantiation.cc

parser/PtreeTypedef.o: parser/PtreeTypedef.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeTypedef.o -MD -MP -MF "parser/$(DEPDIR)/PtreeTypedef.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeTypedef.o `test -f 'parser/PtreeTypedef.cc' || echo '$(srcdir)/'`parser/PtreeTypedef.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeTypedef.Tpo" "parser/$(DEPDIR)/PtreeTypedef.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeTypedef.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeTypedef.cc' object='parser/PtreeTypedef.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeTypedef.Po' tmpdepfile='parser/$(DEPDIR)/PtreeTypedef.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeTypedef.o `test -f 'parser/PtreeTypedef.cc' || echo '$(srcdir)/'`parser/PtreeTypedef.cc

parser/PtreeTypedef.obj: parser/PtreeTypedef.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeTypedef.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeTypedef.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeTypedef.obj `if test -f 'parser/PtreeTypedef.cc'; then $(CYGPATH_W) 'parser/PtreeTypedef.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeTypedef.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeTypedef.Tpo" "parser/$(DEPDIR)/PtreeTypedef.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeTypedef.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeTypedef.cc' object='parser/PtreeTypedef.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeTypedef.Po' tmpdepfile='parser/$(DEPDIR)/PtreeTypedef.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeTypedef.obj `if test -f 'parser/PtreeTypedef.cc'; then $(CYGPATH_W) 'parser/PtreeTypedef.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeTypedef.cc'; fi`

parser/PtreeTypedef.lo: parser/PtreeTypedef.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeTypedef.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeTypedef.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeTypedef.lo `test -f 'parser/PtreeTypedef.cc' || echo '$(srcdir)/'`parser/PtreeTypedef.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeTypedef.Tpo" "parser/$(DEPDIR)/PtreeTypedef.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeTypedef.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeTypedef.cc' object='parser/PtreeTypedef.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeTypedef.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeTypedef.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeTypedef.lo `test -f 'parser/PtreeTypedef.cc' || echo '$(srcdir)/'`parser/PtreeTypedef.cc

parser/PtreeUserAccessSpec.o: parser/PtreeUserAccessSpec.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeUserAccessSpec.o -MD -MP -MF "parser/$(DEPDIR)/PtreeUserAccessSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeUserAccessSpec.o `test -f 'parser/PtreeUserAccessSpec.cc' || echo '$(srcdir)/'`parser/PtreeUserAccessSpec.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeUserAccessSpec.Tpo" "parser/$(DEPDIR)/PtreeUserAccessSpec.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeUserAccessSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeUserAccessSpec.cc' object='parser/PtreeUserAccessSpec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeUserAccessSpec.Po' tmpdepfile='parser/$(DEPDIR)/PtreeUserAccessSpec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeUserAccessSpec.o `test -f 'parser/PtreeUserAccessSpec.cc' || echo '$(srcdir)/'`parser/PtreeUserAccessSpec.cc

parser/PtreeUserAccessSpec.obj: parser/PtreeUserAccessSpec.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeUserAccessSpec.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeUserAccessSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeUserAccessSpec.obj `if test -f 'parser/PtreeUserAccessSpec.cc'; then $(CYGPATH_W) 'parser/PtreeUserAccessSpec.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeUserAccessSpec.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeUserAccessSpec.Tpo" "parser/$(DEPDIR)/PtreeUserAccessSpec.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeUserAccessSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeUserAccessSpec.cc' object='parser/PtreeUserAccessSpec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeUserAccessSpec.Po' tmpdepfile='parser/$(DEPDIR)/PtreeUserAccessSpec.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeUserAccessSpec.obj `if test -f 'parser/PtreeUserAccessSpec.cc'; then $(CYGPATH_W) 'parser/PtreeUserAccessSpec.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeUserAccessSpec.cc'; fi`

parser/PtreeUserAccessSpec.lo: parser/PtreeUserAccessSpec.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeUserAccessSpec.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeUserAccessSpec.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeUserAccessSpec.lo `test -f 'parser/PtreeUserAccessSpec.cc' || echo '$(srcdir)/'`parser/PtreeUserAccessSpec.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeUserAccessSpec.Tpo" "parser/$(DEPDIR)/PtreeUserAccessSpec.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeUserAccessSpec.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeUserAccessSpec.cc' object='parser/PtreeUserAccessSpec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeUserAccessSpec.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeUserAccessSpec.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeUserAccessSpec.lo `test -f 'parser/PtreeUserAccessSpec.cc' || echo '$(srcdir)/'`parser/PtreeUserAccessSpec.cc

parser/PtreeUserdefKeyword.o: parser/PtreeUserdefKeyword.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeUserdefKeyword.o -MD -MP -MF "parser/$(DEPDIR)/PtreeUserdefKeyword.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeUserdefKeyword.o `test -f 'parser/PtreeUserdefKeyword.cc' || echo '$(srcdir)/'`parser/PtreeUserdefKeyword.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeUserdefKeyword.Tpo" "parser/$(DEPDIR)/PtreeUserdefKeyword.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeUserdefKeyword.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeUserdefKeyword.cc' object='parser/PtreeUserdefKeyword.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeUserdefKeyword.Po' tmpdepfile='parser/$(DEPDIR)/PtreeUserdefKeyword.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeUserdefKeyword.o `test -f 'parser/PtreeUserdefKeyword.cc' || echo '$(srcdir)/'`parser/PtreeUserdefKeyword.cc

parser/PtreeUserdefKeyword.obj: parser/PtreeUserdefKeyword.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeUserdefKeyword.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeUserdefKeyword.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeUserdefKeyword.obj `if test -f 'parser/PtreeUserdefKeyword.cc'; then $(CYGPATH_W) 'parser/PtreeUserdefKeyword.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeUserdefKeyword.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeUserdefKeyword.Tpo" "parser/$(DEPDIR)/PtreeUserdefKeyword.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeUserdefKeyword.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeUserdefKeyword.cc' object='parser/PtreeUserdefKeyword.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeUserdefKeyword.Po' tmpdepfile='parser/$(DEPDIR)/PtreeUserdefKeyword.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeUserdefKeyword.obj `if test -f 'parser/PtreeUserdefKeyword.cc'; then $(CYGPATH_W) 'parser/PtreeUserdefKeyword.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeUserdefKeyword.cc'; fi`

parser/PtreeUserdefKeyword.lo: parser/PtreeUserdefKeyword.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeUserdefKeyword.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeUserdefKeyword.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeUserdefKeyword.lo `test -f 'parser/PtreeUserdefKeyword.cc' || echo '$(srcdir)/'`parser/PtreeUserdefKeyword.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeUserdefKeyword.Tpo" "parser/$(DEPDIR)/PtreeUserdefKeyword.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeUserdefKeyword.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeUserdefKeyword.cc' object='parser/PtreeUserdefKeyword.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeUserdefKeyword.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeUserdefKeyword.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeUserdefKeyword.lo `test -f 'parser/PtreeUserdefKeyword.cc' || echo '$(srcdir)/'`parser/PtreeUserdefKeyword.cc

parser/PtreeUsing.o: parser/PtreeUsing.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeUsing.o -MD -MP -MF "parser/$(DEPDIR)/PtreeUsing.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeUsing.o `test -f 'parser/PtreeUsing.cc' || echo '$(srcdir)/'`parser/PtreeUsing.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeUsing.Tpo" "parser/$(DEPDIR)/PtreeUsing.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeUsing.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeUsing.cc' object='parser/PtreeUsing.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeUsing.Po' tmpdepfile='parser/$(DEPDIR)/PtreeUsing.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeUsing.o `test -f 'parser/PtreeUsing.cc' || echo '$(srcdir)/'`parser/PtreeUsing.cc

parser/PtreeUsing.obj: parser/PtreeUsing.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeUsing.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeUsing.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeUsing.obj `if test -f 'parser/PtreeUsing.cc'; then $(CYGPATH_W) 'parser/PtreeUsing.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeUsing.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeUsing.Tpo" "parser/$(DEPDIR)/PtreeUsing.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeUsing.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeUsing.cc' object='parser/PtreeUsing.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeUsing.Po' tmpdepfile='parser/$(DEPDIR)/PtreeUsing.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeUsing.obj `if test -f 'parser/PtreeUsing.cc'; then $(CYGPATH_W) 'parser/PtreeUsing.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeUsing.cc'; fi`

parser/PtreeUsing.lo: parser/PtreeUsing.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeUsing.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeUsing.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeUsing.lo `test -f 'parser/PtreeUsing.cc' || echo '$(srcdir)/'`parser/PtreeUsing.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeUsing.Tpo" "parser/$(DEPDIR)/PtreeUsing.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeUsing.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeUsing.cc' object='parser/PtreeUsing.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeUsing.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeUsing.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeUsing.lo `test -f 'parser/PtreeUsing.cc' || echo '$(srcdir)/'`parser/PtreeUsing.cc

parser/PtreeUtil.o: parser/PtreeUtil.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeUtil.o -MD -MP -MF "parser/$(DEPDIR)/PtreeUtil.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeUtil.o `test -f 'parser/PtreeUtil.cc' || echo '$(srcdir)/'`parser/PtreeUtil.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeUtil.Tpo" "parser/$(DEPDIR)/PtreeUtil.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeUtil.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeUtil.cc' object='parser/PtreeUtil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeUtil.Po' tmpdepfile='parser/$(DEPDIR)/PtreeUtil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeUtil.o `test -f 'parser/PtreeUtil.cc' || echo '$(srcdir)/'`parser/PtreeUtil.cc

parser/PtreeUtil.obj: parser/PtreeUtil.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeUtil.obj -MD -MP -MF "parser/$(DEPDIR)/PtreeUtil.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeUtil.obj `if test -f 'parser/PtreeUtil.cc'; then $(CYGPATH_W) 'parser/PtreeUtil.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeUtil.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeUtil.Tpo" "parser/$(DEPDIR)/PtreeUtil.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeUtil.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeUtil.cc' object='parser/PtreeUtil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeUtil.Po' tmpdepfile='parser/$(DEPDIR)/PtreeUtil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeUtil.obj `if test -f 'parser/PtreeUtil.cc'; then $(CYGPATH_W) 'parser/PtreeUtil.cc'; else $(CYGPATH_W) '$(srcdir)/parser/PtreeUtil.cc'; fi`

parser/PtreeUtil.lo: parser/PtreeUtil.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/PtreeUtil.lo -MD -MP -MF "parser/$(DEPDIR)/PtreeUtil.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/PtreeUtil.lo `test -f 'parser/PtreeUtil.cc' || echo '$(srcdir)/'`parser/PtreeUtil.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/PtreeUtil.Tpo" "parser/$(DEPDIR)/PtreeUtil.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/PtreeUtil.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/PtreeUtil.cc' object='parser/PtreeUtil.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/PtreeUtil.Plo' tmpdepfile='parser/$(DEPDIR)/PtreeUtil.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/PtreeUtil.lo `test -f 'parser/PtreeUtil.cc' || echo '$(srcdir)/'`parser/PtreeUtil.cc

parser/TheErrorLog.o: parser/TheErrorLog.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/TheErrorLog.o -MD -MP -MF "parser/$(DEPDIR)/TheErrorLog.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/TheErrorLog.o `test -f 'parser/TheErrorLog.cc' || echo '$(srcdir)/'`parser/TheErrorLog.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/TheErrorLog.Tpo" "parser/$(DEPDIR)/TheErrorLog.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/TheErrorLog.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/TheErrorLog.cc' object='parser/TheErrorLog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/TheErrorLog.Po' tmpdepfile='parser/$(DEPDIR)/TheErrorLog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/TheErrorLog.o `test -f 'parser/TheErrorLog.cc' || echo '$(srcdir)/'`parser/TheErrorLog.cc

parser/TheErrorLog.obj: parser/TheErrorLog.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/TheErrorLog.obj -MD -MP -MF "parser/$(DEPDIR)/TheErrorLog.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/TheErrorLog.obj `if test -f 'parser/TheErrorLog.cc'; then $(CYGPATH_W) 'parser/TheErrorLog.cc'; else $(CYGPATH_W) '$(srcdir)/parser/TheErrorLog.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/TheErrorLog.Tpo" "parser/$(DEPDIR)/TheErrorLog.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/TheErrorLog.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/TheErrorLog.cc' object='parser/TheErrorLog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/TheErrorLog.Po' tmpdepfile='parser/$(DEPDIR)/TheErrorLog.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/TheErrorLog.obj `if test -f 'parser/TheErrorLog.cc'; then $(CYGPATH_W) 'parser/TheErrorLog.cc'; else $(CYGPATH_W) '$(srcdir)/parser/TheErrorLog.cc'; fi`

parser/TheErrorLog.lo: parser/TheErrorLog.cc
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT parser/TheErrorLog.lo -MD -MP -MF "parser/$(DEPDIR)/TheErrorLog.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o parser/TheErrorLog.lo `test -f 'parser/TheErrorLog.cc' || echo '$(srcdir)/'`parser/TheErrorLog.cc; \
@am__fastdepCXX_TRUE@	then mv -f "parser/$(DEPDIR)/TheErrorLog.Tpo" "parser/$(DEPDIR)/TheErrorLog.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "parser/$(DEPDIR)/TheErrorLog.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='parser/TheErrorLog.cc' object='parser/TheErrorLog.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='parser/$(DEPDIR)/TheErrorLog.Plo' tmpdepfile='parser/$(DEPDIR)/TheErrorLog.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o parser/TheErrorLog.lo `test -f 'parser/TheErrorLog.cc' || echo '$(srcdir)/'`parser/TheErrorLog.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf parser/.libs parser/_libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
nobase_pkgincludeHEADERS_INSTALL = $(install_sh_DATA)
install-nobase_pkgincludeHEADERS: $(nobase_pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
	@list='$(nobase_pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="$$p"; \
	  echo " $(nobase_pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(nobase_pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-nobase_pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_pkginclude_HEADERS)'; for p in $$list; do \
	  f="$$p"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/parser
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f parser/$(am__dirstamp)
	-rm -f parser/$(DEPDIR)/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-nobase_pkgincludeHEADERS

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-nobase_pkgincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-nobase_pkgincludeHEADERS install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-nobase_pkgincludeHEADERS


###################################################################

parser/ptree-gen: $(srcdir)/parser/ptree-gen.in
	cd $(top_builddir) && ./config.status opencxx/parser/ptree-gen

parser/ptree-generated.cc: parser/ptree-generated.h parser/ptree-gen
parser/ptree-generated.h: parser/ptree-gen
	cd parser && chmod +x ptree-gen && ./ptree-gen

check-header-completness: $(nobase_pkginclude_HEADERS:%=%.is-complete) $(noinst_HEADERS:%=%.is-complete)

%.h.is-complete : %.h
	rm -f completness.cc
	echo '#include "'$<'"' >completness.cc
	$(CXX) -c $(INCLUDES) completness.cc -o completness.o
	rm completness.cc completness.o
	touch $@

show-sources:
	@for f in $(nobase_pkginclude_HEADERS) \
                  $(EXTRA_DIST) $(libocc_mop_la_SOURCES) \
                  $(libocc_parser_la_SOURCES); do echo $$f; done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
